<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" nonce="<?php echo $nonce; ?>"></script>
    
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" nonce="<?php echo $nonce; ?>">
    

    Berikut adalah usulan struktur dan alur kerja yang direvisi untuk proses payroll dan review agar dapat dibagi ke dalam beberapa halaman terpisah, sehingga:

SDM Memiliki Kontrol Penuh Terhadap Data Payroll dan Perubahan (Fungsi Assign & Input Data):

Halaman Assign & Update Payhead (SDM):
Halaman ini dikhususkan untuk SDM. Di sini SDM dapat:
Melakukan penetapan (assign) komponen payhead (misalnya, tunjangan, potongan) ke setiap karyawan/guru.
Mengubah nilai komponen yang berkaitan dengan perubahan status atau promosi (misalnya, dari tunjangan wali kelas 0 menjadi Rp 25.000).
Memilih periode (Select Month) untuk payroll dan menampilkan data penggajian sementara.
Fitur Tambahan:
Tersedia input keterangan dan unggahan (upload) dokumen pendukung (misalnya, surat promosi atau dokumen resmi perubahan status) yang menjadi bukti perubahan data perorangan.
Setelah melakukan penyesuaian, data payroll disimpan dalam status draft/revisi.
Keuangan Hanya Melakukan Review Akhir Berdasarkan Data yang Telah Diverifikasi SDM:

Halaman Review Payroll (Keuangan):
Halaman ini dikhususkan untuk role Keuangan. Pada halaman ini:
Ditampilkan data payroll untuk periode tertentu yang telah diinput oleh SDM, lengkap dengan nilai-nilai komponen seperti gaji pokok, tunjangan, potongan, dan nilai-nilai khusus (misalnya, tunjangan wali kelas).
Setiap perubahan yang menyebabkan perbedaan (misalnya, penambahan tunjangan wali kelas Rp 25.000) disertai dengan keterangan dan lampiran dokumen pendukung.
Keuangan dapat meninjau setiap perubahan dan memverifikasi apakah dokumen pendukung sudah lengkap dan sesuai.
Setelah review, Keuangan hanya memiliki opsi untuk acc (approve) atau tolak payroll tersebut.
Jika terdapat kekurangan atau ketidaksesuaian, Keuangan dapat menolak sehingga payroll kembali dalam status revisi dan SDM harus melakukan penyesuaian ulang.
Proses Final Payroll dan Penerapan Transaksi:

Halaman Finalisasi Payroll (Setelah Review):
Setelah Keuangan memberikan persetujuan, sistem akan menjalankan proses finalisasi payroll:
Data payroll yang telah disetujui di-insert ke tabel payroll dan payroll_detail menggunakan transaksi database agar proses tersebut atomik dan konsisten.
Payroll tersebut kemudian akan memiliki status final (atau status lain yang menandakan bahwa data tidak dapat diubah lagi tanpa melalui proses revisi resmi).
Penambahan Status Payroll:

Seluruh data payroll perlu memiliki status (misalnya, draft, revisi, final) yang:
Mencerminkan tahap proses: dari input awal oleh SDM, review oleh Keuangan, hingga finalisasi.
Membantu semua pihak (SDM dan Keuangan) mengetahui posisi data payroll dan apa saja perubahan yang sudah dilakukan serta dokumen pendukung yang terkait.
Contoh Kasus:
Misalnya, pada bulan Desember 2024, Guru A (yang saat itu berstatus “Guru Biasa”) tidak mendapatkan tunjangan wali kelas. Kemudian, di Januari 2025 Guru A mendapat promosi menjadi Wali Kelas 1 SD sehingga tunjangan wali kelas yang sebelumnya 0 berubah menjadi Rp 25.000.

Di Halaman SDM:

SDM masuk ke halaman Assign/Update Payhead dan mengubah nilai tunjangan untuk Guru A.
SDM harus mengunggah surat promosi sebagai bukti perubahan status dan memberikan keterangan bahwa perubahan tersebut adalah akibat promosi.
Data diubah dan disimpan dalam status draft/revisi.
Di Halaman Review Keuangan:

Keuangan kemudian membuka halaman review dan melihat perubahan data Guru A, lengkap dengan dokumen pendukung dan keterangan (misalnya, “Promosi ke Wali Kelas 1 SD – Lampiran surat promosi”).
Setelah verifikasi, Keuangan dapat menyetujui payroll untuk periode tersebut. Jika disetujui, payroll akan diproses secara final.
Jika ada kekurangan, Keuangan dapat menolak dan mengembalikan ke SDM untuk diperbaiki.
Proses Finalisasi:

Ketika payroll disetujui, seluruh proses penyimpanan (insert data ke tabel payroll dan payroll_detail) dijalankan dalam transaksi untuk menjaga konsistensi data.
Kesimpulan:
Dengan membagi proses menjadi beberapa halaman seperti di atas, kita mendapatkan keuntungan:

Pemrosesan yang Lebih Terstruktur:
SDM bertanggung jawab atas input dan penyesuaian data payroll serta mengunggah dokumen pendukung. Sedangkan Keuangan hanya fokus pada review dan persetujuan final.

Transparansi Data:
Setiap perubahan nilai komponen (misalnya, tunjangan) disertai dengan keterangan dan bukti lampiran yang dapat diakses oleh pihak Keuangan. Ini memudahkan audit dan penelusuran perubahan data.

Kepastian Hukum dan Audit:
Dengan adanya status payroll (draft, revisi, final) serta pencatatan audit log, setiap perubahan tercatat dengan jelas dan proses finalisasi payroll menjadi lebih transparan.

Konsistensi Data:
Penggunaan transaksi database pada proses final payroll memastikan bahwa data yang disimpan konsisten dan dapat diandalkan.

Jadi, jawabannya adalah ya—Anda dapat (dan bahkan disarankan untuk) membedah proses payroll dan review menjadi beberapa halaman dengan fungsi yang spesifik. Hal ini akan membantu memisahkan tanggung jawab antara SDM (yang menangani penyesuaian dan penginputan data beserta dokumen pendukung) dan Keuangan (yang hanya melakukan review akhir dan persetujuan). Langkah ini akan memberikan transparansi dan efisiensi yang lebih tinggi dalam pengelolaan payroll.

Apakah penjelasan dan usulan struktur ini sudah sesuai dengan apa yang Anda bayangkan? Jika ada hal yang ingin didiskusikan atau dikembangkan lebih lanjut, silakan diinformasikan!





Rapikan dan buatkan lebih jelas lagi apa yang anda pahami antar role. Dan apakah sudah sesuai dengan file file saya :

1. employees.php :
<?php
// File: /payroll_absensi_v2/payroll/keuangan/employees.php

// Mulai session
session_start();

// Sertakan koneksi ke database
require_once __DIR__ . '/../../koneksi.php';

/**
 * Mengirimkan respons JSON dengan format standar.
 */
function send_response($code, $result) {
    header('Content-Type: application/json; charset=utf-8');
    echo json_encode(['code' => $code, 'result' => $result], JSON_UNESCAPED_UNICODE);
    exit();
}

/**
 * Membersihkan input dari karakter-karakter yang tidak diinginkan.
 */
function bersihkan_input($data) {
    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');
}

/**
 * Menerjemahkan jenis payhead ke dalam bahasa Indonesia.
 */
function translateJenis($jenis) {
    $translations = [
        'earnings'   => 'Pendapatan',
        'deductions' => 'Potongan'
    ];
    return isset($translations[$jenis]) ? $translations[$jenis] : 'Tidak Diketahui';
}

/**
 * Mengembalikan nama bulan dalam Bahasa Indonesia.
 */
function getIndonesianMonthName($monthNumber) {
    $bulan = [
        1  => 'Januari',
        2  => 'Februari',
        3  => 'Maret',
        4  => 'April',
        5  => 'Mei',
        6  => 'Juni',
        7  => 'Juli',
        8  => 'Agustus',
        9  => 'September',
        10 => 'Oktober',
        11 => 'November',
        12 => 'Desember'
    ];
    return isset($bulan[$monthNumber]) ? $bulan[$monthNumber] : '';
}

/**
 * === HANDLER UNTUK REQUEST AJAX ===
 */
if (isset($_GET['ajax']) && $_GET['ajax'] == '1') {
    error_log("DEBUG: AJAX request received");
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $case = isset($_POST['case']) ? trim($_POST['case']) : '';
        error_log("DEBUG: Case received: " . $case);
        switch ($case) {
            case 'LoadingEmployees':
                LoadingEmployees($conn);
                break;
            case 'EditEmployee':
                EditEmployee($conn);
                break;
            case 'AssignPayheadsToEmployee':
                AssignPayheadsToEmployee($conn);
                break;
            case 'ViewEmployeeDetail':
                ViewEmployeeDetail($conn);
                break;
            case 'GetPayheadById':
                GetPayheadById($conn);
                break;
            case 'GetAllPayheads':
                GetAllPayheads($conn);
                break;
            default:
                error_log("DEBUG: Invalid case: " . $case);
                send_response(1, 'Kasus tidak valid.');
        }
    } else {
        error_log("DEBUG: Request method is not POST");
        send_response(405, 'Metode Permintaan Tidak Diizinkan.');
    }
    $conn->close();
    exit();
}

/**
 * Mengambil seluruh data payheads beserta nominal default.
 */
function GetAllPayheads($conn) {
    error_log("DEBUG: Entering GetAllPayheads");
    $sql = "SELECT id, nama_payhead, jenis, nominal FROM payheads ORDER BY nama_payhead ASC";
    $result = $conn->query($sql);
    if (!$result) {
        error_log("DEBUG: Query failed in GetAllPayheads: " . $conn->error);
        send_response(1, 'Query gagal: ' . $conn->error);
    }
    $payheads = [];
    while ($row = $result->fetch_assoc()) {
        $payheads[] = [
            'id'                => $row['id'],
            'nama_payhead'      => $row['nama_payhead'],
            'jenis_payhead'     => $row['jenis'],
            'jenis_payhead_idn' => translateJenis($row['jenis']),
            'nominal'           => $row['nominal']
        ];
    }
    error_log("DEBUG: GetAllPayheads returning " . count($payheads) . " records");
    send_response(0, $payheads);
}

/**
 * Mengambil data karyawan untuk DataTables dengan filter pencarian dan pagination.
 */
function LoadingEmployees($conn) {
    error_log("DEBUG: Entering LoadingEmployees");
    $draw   = isset($_POST['draw']) ? intval($_POST['draw']) : 0;
    $start  = isset($_POST['start']) ? intval($_POST['start']) : 0;
    $length = isset($_POST['length']) ? intval($_POST['length']) : 10;
    $search = isset($_POST['search']['value']) ? bersihkan_input($_POST['search']['value']) : '';
    $jenjangFilter = isset($_POST['jenjang']) ? bersihkan_input($_POST['jenjang']) : '';
    error_log("DEBUG: LoadingEmployees parameters: draw=$draw, start=$start, length=$length, search=$search, jenjangFilter=$jenjangFilter");

    $sql = "SELECT SQL_CALC_FOUND_ROWS
                a.id, a.uid, a.nip, a.nama, a.jenjang, a.role,
                a.job_title, a.status_kerja, a.masa_kerja_tahun, a.masa_kerja_bulan,
                a.gaji_pokok, a.no_rekening, a.email,
                si.level AS salary_index_level, si.base_salary AS salary_index_base
            FROM anggota_sekolah a
            LEFT JOIN salary_indices si ON a.salary_index_id = si.id
            WHERE 1=1";
    $params = [];
    $types  = "";
    if (!empty($jenjangFilter)) {
        $sql .= " AND a.jenjang = ?";
        $params[] = $jenjangFilter;
        $types .= "s";
    }
    if (!empty($search)) {
        $sql .= " AND (a.id LIKE ? OR a.uid LIKE ? OR a.nip LIKE ? OR a.nama LIKE ? OR
                    a.jenjang LIKE ? OR a.role LIKE ? OR a.job_title LIKE ? OR
                    a.status_kerja LIKE ? OR a.no_rekening LIKE ? OR a.email LIKE ?)";
        $searchParam = "%" . $search . "%";
        for ($i = 0; $i < 10; $i++) {
            $params[] = $searchParam;
            $types .= "s";
        }
    }
    // Penentuan order
    $orderBy = " ORDER BY a.id DESC";
    if (isset($_POST['order'][0]['column'], $_POST['columns'])) {
        $columnIndex = intval($_POST['order'][0]['column']);
        $allowedColumns = ['id','uid','nip','nama','jenjang','role','job_title','masa_kerja','salary_index_level','gaji_pokok','no_rekening','email'];
        if (isset($_POST['columns'][$columnIndex]['data']) &&
            in_array($_POST['columns'][$columnIndex]['data'], $allowedColumns)) {
            $colName = $_POST['columns'][$columnIndex]['data'];
            $colSortOrder = ($_POST['order'][0]['dir'] === 'asc') ? 'ASC' : 'DESC';
            if ($colName !== 'masa_kerja') {
                $orderBy = " ORDER BY a.$colName $colSortOrder";
            }
        }
    }
    // Pagination
    $sql .= $orderBy . " LIMIT ?, ?";
    $params[] = $start;
    $params[] = $length;
    $types .= "ii";

    error_log("DEBUG: Final SQL in LoadingEmployees: " . $sql);
    $stmt = $conn->prepare($sql);
    if (!$stmt) {
        error_log("DEBUG: Prepare failed in LoadingEmployees: " . $conn->error);
        send_response(1, 'Prepare failed: ' . $conn->error);
    }
    if (!empty($params)) {
        $stmt->bind_param($types, ...$params);
    }
    if (!$stmt->execute()) {
        error_log("DEBUG: Execute failed in LoadingEmployees: " . $stmt->error);
        send_response(1, 'Execute failed: ' . $stmt->error);
    }
    $resData = $stmt->get_result();
    // Hitung jumlah data sesuai filter
    $resultFiltered = $conn->query("SELECT FOUND_ROWS() AS total");
    $totalFiltered = ($resultFiltered) ? $resultFiltered->fetch_assoc()['total'] : 0;
    // Hitung total data tanpa filter
    $resultTotal = $conn->query("SELECT COUNT(*) AS total FROM anggota_sekolah");
    $totalData = ($resultTotal) ? $resultTotal->fetch_assoc()['total'] : 0;

    $data = [];
    while ($row = $resData->fetch_assoc()) {
        $masaKerja = ($row['masa_kerja_tahun'] > 0 ? $row['masa_kerja_tahun'] . ' Thn ' : '') .
                     ($row['masa_kerja_bulan'] > 0 ? $row['masa_kerja_bulan'] . ' Bln' : '');
        $masaKerja = trim($masaKerja) ?: '-';
        $gajiPokok = number_format($row['gaji_pokok'], 2, ',', '.');
        // Definisikan tombol aksi dalam dropdown
        $aksi = '
<div class="dropdown">
  <button class="btn" type="button" id="dropdownMenuButton_' . $row['id'] . '" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    <i class="bi bi-three-dots-vertical"></i>
  </button>
  <div class="dropdown-menu" aria-labelledby="dropdownMenuButton_' . $row['id'] . '">
    <a class="dropdown-item btnEdit" href="javascript:void(0)" data-id="' . $row['id'] . '">
      <i class="bi bi-pencil-square"></i> Edit
    </a>
    <a class="dropdown-item btnAssignPayheads" href="javascript:void(0)" data-id="' . $row['id'] . '">
      <i class="bi bi-cash-stack"></i> Assign Payheads
    </a>
    <a class="dropdown-item btnViewDetail" href="javascript:void(0)" data-id="' . $row['id'] . '">
      <i class="bi bi-eye-fill"></i> View Detail
    </a>
    <a class="dropdown-item btnSelectMonth" href="javascript:void(0)" data-id="' . $row['id'] . '">
      <i class="fa fa-calendar"></i> Select Month
    </a>
  </div>
</div>';
        $data[] = [
            "id"            => $row['id'],
            "uid"           => $row['uid'],
            "nip"           => $row['nip'],
            "nama"          => $row['nama'],
            "jenjang"       => $row['jenjang'],
            "role"          => $row['role'],
            "job_title"     => $row['job_title'],
            "masa_kerja"    => $masaKerja,
            "level_indeks"  => $row['salary_index_level'] ?: '-',
            "gaji_pokok"    => $gajiPokok,
            "no_rekening"   => $row['no_rekening'],
            "email"         => $row['email'],
            "aksi"          => $aksi
        ];
    }
    error_log("DEBUG: Loaded " . count($data) . " employees");
    $stmt->close();
    echo json_encode([
        "draw"            => $draw,
        "recordsTotal"    => $totalData,
        "recordsFiltered" => $totalFiltered,
        "data"            => $data
    ], JSON_UNESCAPED_UNICODE);
    exit();
}

/**
 * Memperbarui data no rekening karyawan.
 */
function EditEmployee($conn) {
    error_log("DEBUG: Entering EditEmployee");
    $id = isset($_POST['id']) ? intval($_POST['id']) : 0;
    $no_rekening = isset($_POST['no_rekening']) ? bersihkan_input($_POST['no_rekening']) : '';
    if ($id <= 0 || empty($no_rekening)) {
        error_log("DEBUG: EditEmployee: Invalid parameters id=$id, no_rekening=$no_rekening");
        send_response(1, 'ID dan No Rekening wajib diisi.');
    }

    // Ambil data sebelum update (jika diperlukan)
    $stmtBefore = $conn->prepare("SELECT no_rekening FROM anggota_sekolah WHERE id = ? LIMIT 1");
    if ($stmtBefore) {
        $stmtBefore->bind_param("i", $id);
        $stmtBefore->execute();
        $stmtBefore->get_result();
        $stmtBefore->close();
    } else {
        error_log("DEBUG: EditEmployee: Prepare failed: " . $conn->error);
        send_response(1, 'Prepare failed: ' . $conn->error);
    }

    // Update data no_rekening
    $stmtUpdate = $conn->prepare("UPDATE anggota_sekolah SET no_rekening = ? WHERE id = ?");
    if (!$stmtUpdate) {
        error_log("DEBUG: EditEmployee: Prepare failed (update): " . $conn->error);
        send_response(1, 'Prepare failed: ' . $conn->error);
    }
    $stmtUpdate->bind_param("si", $no_rekening, $id);
    if ($stmtUpdate->execute()) {
        error_log("DEBUG: EditEmployee: Update successful for ID $id");
        send_response(0, 'No Rekening karyawan berhasil diperbarui.');
    } else {
        error_log("DEBUG: EditEmployee: Update failed: " . $stmtUpdate->error);
        send_response(1, 'Gagal memperbarui No Rekening: ' . $stmtUpdate->error);
    }
    $stmtUpdate->close();
}

/**
 * Menetapkan payheads kepada karyawan, beserta input nominal, unggahan dokumen, dan keterangan.
 */
function AssignPayheadsToEmployee($conn) {
    error_log("DEBUG: Entering AssignPayheadsToEmployee");
    $empcode = isset($_POST['empcode']) ? intval($_POST['empcode']) : 0;

    // Decode data JSON dari form
    $payheads    = isset($_POST['payheads']) ? json_decode($_POST['payheads'], true) : [];
    $pay_amounts = isset($_POST['pay_amounts']) ? json_decode($_POST['pay_amounts'], true) : [];
    $remarks     = isset($_POST['remarks']) ? trim($_POST['remarks']) : '';

    if ($empcode <= 0) {
        send_response(1, 'ID karyawan tidak valid.');
    }
    if (empty($payheads)) {
        send_response(1, 'Tidak ada payheads yang dipilih.');
    }

    // Proses unggah dokumen pendukung (jika ada)
    $supportDocPath = '';
    if (isset($_FILES['support_doc']) && $_FILES['support_doc']['error'] === UPLOAD_ERR_OK) {
        $uploadDir = __DIR__ . '/../../uploads/payhead_support/';
        if (!is_dir($uploadDir)) {
            mkdir($uploadDir, 0755, true);
        }
        $fileTmpPath = $_FILES['support_doc']['tmp_name'];
        $fileName    = basename($_FILES['support_doc']['name']);
        $fileExt     = pathinfo($fileName, PATHINFO_EXTENSION);
        $newFileName = uniqid('doc_', true) . '.' . $fileExt;
        $destPath    = $uploadDir . $newFileName;
        if (!move_uploaded_file($fileTmpPath, $destPath)) {
            send_response(1, 'Gagal mengunggah dokumen pendukung.');
        }
        // Simpan path relatif untuk ditampilkan/diakses kelak
        $supportDocPath = '/payroll_absensi_v2/uploads/payhead_support/' . $newFileName;
    }

    $conn->begin_transaction();
    try {
        // (Opsional) Hapus payheads lama agar digantikan data baru
        // — Tergantung kebutuhan. Anda bisa saja tidak menghapus, melainkan update.
        $stmtDelete = $conn->prepare("DELETE FROM employee_payheads WHERE id_anggota = ?");
        $stmtDelete->bind_param("i", $empcode);
        $stmtDelete->execute();
        $stmtDelete->close();

        // Statement untuk ambil jenis payhead
        $stmtGetJenis = $conn->prepare("SELECT jenis FROM payheads WHERE id = ?");
        // Statement insert payhead
        // Tambahkan kolom status, remarks, support_doc_path
        $stmtInsert = $conn->prepare("
            INSERT INTO employee_payheads
                (id_anggota, id_payhead, jenis, amount, status, remarks, support_doc_path)
            VALUES (?, ?, ?, ?, 'draft', ?, ?)
        ");

        foreach ($payheads as $payhead_id) {
            $payhead_id = intval($payhead_id);
            $nilai = isset($pay_amounts[$payhead_id])
                ? floatval(str_replace(['.', ','], ['', '.'], $pay_amounts[$payhead_id]))
                : 0.0;

            $stmtGetJenis->bind_param("i", $payhead_id);
            $stmtGetJenis->execute();
            $resJenis = $stmtGetJenis->get_result();
            if ($resJenis->num_rows === 0) {
                throw new Exception("Payhead ID $payhead_id tidak ditemukan.");
            }
            $rowJenis = $resJenis->fetch_assoc();
            $jenis = $rowJenis['jenis'];

            $stmtInsert->bind_param("iisdss", $empcode, $payhead_id, $jenis, $nilai, $remarks, $supportDocPath);
            $stmtInsert->execute();
        }
        $stmtGetJenis->close();
        $stmtInsert->close();

        $conn->commit();

        // Log ringkas
        error_log("Assigned payheads to $empcode in draft status. Remarks: $remarks. Doc: $supportDocPath");

        send_response(0, 'Payheads berhasil disimpan dalam status draft.');
    } catch (Exception $e) {
        $conn->rollback();
        send_response(1, 'Gagal menugaskan payheads: ' . $e->getMessage());
    }
}

/**
 * Menampilkan detail karyawan beserta payheads dan perhitungan gaji bersih.
 */
function ViewEmployeeDetail($conn) {
    error_log("DEBUG: Entering ViewEmployeeDetail");
    $id = isset($_POST['id']) ? intval($_POST['id']) : 0;
    if ($id <= 0) {
        error_log("DEBUG: ViewEmployeeDetail: Invalid employee ID: $id");
        send_response(1, 'ID karyawan tidak valid.');
    }
    $stmt = $conn->prepare("
        SELECT a.*, si.level AS salary_index_level, si.base_salary AS salary_index_base
        FROM anggota_sekolah a
        LEFT JOIN salary_indices si ON a.salary_index_id = si.id
        WHERE a.id = ?
        LIMIT 1
    ");
    if (!$stmt) {
        error_log("DEBUG: ViewEmployeeDetail: Prepare failed: " . $conn->error);
        send_response(1, 'Prepare failed: ' . $conn->error);
    }
    $stmt->bind_param("i", $id);
    if (!$stmt->execute()) {
        error_log("DEBUG: ViewEmployeeDetail: Execute failed: " . $stmt->error);
        send_response(1, 'Execute failed: ' . $stmt->error);
    }
    $res = $stmt->get_result();
    if ($res->num_rows > 0) {
        $emp = $res->fetch_assoc();
        $stmt->close();
        $masaKerja = ($emp['masa_kerja_tahun'] > 0 ? $emp['masa_kerja_tahun'] . ' Tahun ' : '') .
                     ($emp['masa_kerja_bulan'] > 0 ? $emp['masa_kerja_bulan'] . ' Bulan' : '');
        $masaKerja = trim($masaKerja) ?: '-';
        $gajiPokokVal = floatval($emp['gaji_pokok']);
        $levelIndexVal = floatval($emp['salary_index_base']);

        $stmtPH = $conn->prepare("
            SELECT ep.id_payhead, ph.nama_payhead, ph.jenis AS jenis_payhead, ep.amount
            FROM employee_payheads ep
            JOIN payheads ph ON ep.id_payhead = ph.id
            WHERE ep.id_anggota = ?
        ");
        if (!$stmtPH) {
            error_log("DEBUG: ViewEmployeeDetail: Prepare failed (payheads): " . $conn->error);
            send_response(1, 'Prepare failed: ' . $conn->error);
        }
        $stmtPH->bind_param("i", $id);
        if (!$stmtPH->execute()) {
            error_log("DEBUG: ViewEmployeeDetail: Execute failed (payheads): " . $stmtPH->error);
            send_response(1, 'Execute failed: ' . $stmtPH->error);
        }
        $resPH = $stmtPH->get_result();
        $assigned = [];
        $totalPendapatan = 0;
        $totalPotongan = 0;
        while ($rw = $resPH->fetch_assoc()) {
            $assigned[] = [
                'id_payhead'       => $rw['id_payhead'],
                'nama_payhead'     => $rw['nama_payhead'],
                'jenis_payhead'    => $rw['jenis_payhead'],
                'jenis_payhead_idn'=> translateJenis($rw['jenis_payhead']),
                'amount'           => $rw['amount']
            ];
            if ($rw['jenis_payhead'] === 'earnings') {
                $totalPendapatan += floatval($rw['amount']);
            } else {
                $totalPotongan += floatval($rw['amount']);
            }
        }
        $stmtPH->close();
        $gajiBersihVal = $gajiPokokVal + $levelIndexVal + $totalPendapatan - $totalPotongan;
        error_log("DEBUG: ViewEmployeeDetail: Employee $id: gajiBersih = $gajiBersihVal");
        send_response(0, [
            'id'                 => $emp['id'],
            'uid'                => $emp['uid'],
            'nip'                => $emp['nip'],
            'nama'               => $emp['nama'],
            'jenjang'            => $emp['jenjang'],
            'job_title'          => $emp['job_title'],
            'role'               => $emp['role'],
            'status_kerja'       => $emp['status_kerja'],
            'masa_kerja'         => $masaKerja,
            'gaji_pokok_val'     => $gajiPokokVal,
            'gaji_pokok'         => 'Rp ' . number_format($gajiPokokVal, 2, ',', '.'),
            'no_rekening'        => $emp['no_rekening'],
            'email'              => $emp['email'],
            'jenis_kelamin'      => $emp['jenis_kelamin'],
            'agama'              => $emp['agama'],
            'masa_kerja_tahun'   => $emp['masa_kerja_tahun'],
            'masa_kerja_bulan'   => $emp['masa_kerja_bulan'],
            'payheads'           => $assigned,
            'total_pendapatan'   => $totalPendapatan,
            'total_potongan'     => $totalPotongan,
            'salary_index_level' => $emp['salary_index_level'] ?: '-',
            'salary_index_base'  => $levelIndexVal,
            'gaji_bersih'        => $gajiBersihVal
        ]);
    } else {
        $stmt->close();
        error_log("DEBUG: ViewEmployeeDetail: Employee not found for ID $id");
        send_response(1, 'Karyawan tidak ditemukan.');
    }
}

/**
 * Mengambil detail payhead berdasarkan ID.
 */
function GetPayheadById($conn) {
    error_log("DEBUG: Entering GetPayheadById");
    $id = isset($_POST['id']) ? intval($_POST['id']) : 0;
    if ($id <= 0) {
        error_log("DEBUG: GetPayheadById: Invalid ID: $id");
        send_response(1, 'ID payhead tidak valid.');
    }
    $stmt = $conn->prepare("SELECT id, nama_payhead, jenis AS jenis_payhead FROM payheads WHERE id = ? LIMIT 1");
    if (!$stmt) {
        error_log("DEBUG: GetPayheadById: Prepare failed: " . $conn->error);
        send_response(1, 'Prepare failed: ' . $conn->error);
    }
    $stmt->bind_param("i", $id);
    if (!$stmt->execute()) {
        error_log("DEBUG: GetPayheadById: Execute failed: " . $stmt->error);
        send_response(1, 'Execute failed: ' . $stmt->error);
    }
    $res = $stmt->get_result();
    if ($res->num_rows > 0) {
        $payhead = $res->fetch_assoc();
        $payhead['jenis_payhead_idn'] = translateJenis($payhead['jenis_payhead']);
        error_log("DEBUG: GetPayheadById: Found payhead: " . print_r($payhead, true));
        send_response(0, $payhead);
    } else {
        error_log("DEBUG: GetPayheadById: Payhead not found for ID $id");
        send_response(1, 'Payhead tidak ditemukan.');
    }
    $stmt->close();
}
?>
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <title>Manajemen Karyawan - Payroll System</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- CSS Bootstrap & SB Admin 2 -->
    <link rel="stylesheet" href="/payroll_absensi_v2/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="/payroll_absensi_v2/assets/css/sb-admin-2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.1.1/css/buttons.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap4.min.css">
    <style>
        body { color: #000 !important; }
        .text-gray-800 { color: #000 !important; }
        .btnEdit, .btnAssignPayheads, .btnViewDetail, .btnSelectMonth {
            transition: background-color 0.3s, transform 0.2s;
        }
        .btnEdit:hover, .btnAssignPayheads:hover, .btnViewDetail:hover, .btnSelectMonth:hover {
            transform: scale(1.05);
        }
        .card-header {
            background: linear-gradient(45deg, #0d47a1, #42a5f5);
            color: white;
        }
        .table-hover tbody tr:hover { background-color: #e2e6ea; }
        .aksi-column .btn { margin-right: 5px; margin-bottom: 5px; }
        #employees th, #employees td {
            font-size: 14px; text-align: left; vertical-align: middle; white-space: nowrap; color: #000 !important;
        }
        .spinner-border { margin-left: 5px; }
        .modal-body { display: flex; gap: 25px; color: #000 !important; }
        .modal-body > div {
            flex: 1; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9; padding: 10px;
        }
        #ManageModal .modal-dialog {
            max-width: 1500px; margin: auto; padding-top: 70px;
        }
        /* Pastikan select tidak terpotong */
        #all_payheads, #selected_payheads {
            white-space: normal !important;
            height: auto !important;
            min-height: 250px;
            overflow-y: auto;
        }
    </style>
</head>
<body id="page-top">
    <div id="wrapper">
        <?php include __DIR__ . '/../../sidebar.php'; ?>
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <?php include __DIR__ . '/../../navbar.php'; ?>
                <div class="container-fluid">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/payroll_absensi_v2/payroll/keuangan/dashboard_keuangan.php">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Payroll Anggota</li>
                        </ol>
                    </nav>
                    <h1 class="h3 mb-4 text-gray-800"><i class="bi bi-people-fill"></i> Payroll Anggota</h1>
                    <div id="alert-placeholder"></div>
                    <!-- Filter Karyawan -->
                    <div class="card mb-4">
                        <div class="card-header font-weight-bold"><i class="bi bi-filter-square-fill"></i> Filter Karyawan</div>
                        <div class="card-body">
                            <form id="filterForm" class="form-inline">
                                <input type="hidden" name="csrf_token" value="">
                                <div class="form-group mb-2 mr-3">
                                    <label for="filterJenjang" class="mr-2">Jenjang Pendidikan:</label>
                                    <select class="form-control" id="filterJenjang" name="jenjang">
                                        <option value="">Semua Jenjang</option>
                                        <?php
                                        $stmtJenjang = $conn->prepare("SELECT DISTINCT jenjang FROM anggota_sekolah WHERE jenjang IS NOT NULL AND jenjang != '' ORDER BY jenjang ASC");
                                        if ($stmtJenjang) {
                                            $stmtJenjang->execute();
                                            $resJenjang = $stmtJenjang->get_result();
                                            while ($row = $resJenjang->fetch_assoc()) {
                                                echo '<option value="' . htmlspecialchars($row['jenjang']) . '">' . htmlspecialchars($row['jenjang']) . '</option>';
                                            }
                                            $stmtJenjang->close();
                                        } else {
                                            echo '<option value="">Tidak ada data</option>';
                                        }
                                        ?>
                                    </select>
                                </div>
                                <button type="button" class="btn btn-primary mb-2 mr-2" id="btnApplyFilter">
                                    <i class="fas fa-filter"></i> Terapkan Filter
                                </button>
                                <button type="button" class="btn btn-secondary mb-2" id="btnResetFilter">
                                    <i class="fas fa-undo"></i> Reset Filter
                                </button>
                            </form>
                        </div>
                    </div>
                    <!-- Daftar Anggota Sekolah -->
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-white"><i class="fas fa-clipboard-list"></i> Daftar Anggota Sekolah</h6>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table id="employees" class="table table-sm table-bordered table-striped display nowrap text-dark" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>UID</th>
                                            <th>NIP</th>
                                            <th>Nama</th>
                                            <th>Jenjang</th>
                                            <th>Role</th>
                                            <th>Job Title</th>
                                            <th>Masa Kerja</th>
                                            <th>Level Indeks</th>
                                            <th>Gaji Pokok</th>
                                            <th>No Rekening</th>
                                            <th>Email</th>
                                            <th>Aksi</th>
                                        </tr>
                                    </thead>
                                    <tbody><!-- Data diisi oleh DataTables --></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div> <!-- /.container-fluid -->
            </div> <!-- End of #content -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>&copy; <?php echo date("Y"); ?> Payroll Management System | Developed By [Nama Anda]</span>
                    </div>
                </div>
            </footer>
        </div> <!-- End of content-wrapper -->
    </div> <!-- End of wrapper -->

    <!-- MODAL: Edit Karyawan -->
    <div class="modal fade" id="editEmployeeModal" tabindex="-1" aria-labelledby="editEmployeeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <form id="editEmployeeForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editEmployeeModalLabel"><i class="bi bi-pencil-square"></i> Update No Rekening Karyawan</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="case" value="EditEmployee">
                        <input type="hidden" name="id" id="editEmployeeId">
                        <input type="hidden" name="csrf_token" value="">
                        <div class="container-fluid">
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="editNip">NIP</label>
                                        <input type="text" name="nip" id="editNip" class="form-control" readonly>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="editNama">Nama</label>
                                        <input type="text" name="nama" id="editNama" class="form-control" readonly>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="editJenjang">Jenjang Pendidikan</label>
                                        <input type="text" name="jenjang" id="editJenjang" class="form-control" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="editJobTitle">Job Title</label>
                                        <input type="text" name="job_title" id="editJobTitle" class="form-control" readonly>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="editStatusKerja">Status Kerja</label>
                                        <select name="status_kerja" id="editStatusKerja" class="form-control" disabled>
                                            <option value="">---Pilih Status---</option>
                                            <option value="Tetap">Tetap</option>
                                            <option value="Kontrak">Kontrak</option>
                                            <option value="Paruh Waktu">Paruh Waktu</option>
                                            <option value="Magang">Magang</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="editNoRekening">No Rekening <span class="text-danger">*</span></label>
                                        <input type="text" name="no_rekening" id="editNoRekening" class="form-control" required>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="editEmail">Email</label>
                                        <input type="email" name="email" id="editEmail" class="form-control" readonly>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="editJenisKelamin">Jenis Kelamin</label>
                                        <select name="jenis_kelamin" id="editJenisKelamin" class="form-control" disabled>
                                            <option value="">---</option>
                                            <option value="L">Laki-laki</option>
                                            <option value="P">Perempuan</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="editAgama">Agama</label>
                                        <input type="text" name="agama" id="editAgama" class="form-control" readonly>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Update
                            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle"></i> Batal
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- MODAL: Assign Payheads (Improved) -->
<div class="modal fade" id="ManageModal" tabindex="-1" aria-labelledby="manageModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <form id="assign-payhead-form" enctype="multipart/form-data">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title" id="manageModalLabel">
            <i class="bi bi-cash-stack"></i> Tetapkan / Perbarui Payheads ke Karyawan
          </h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Tutup"></button>
        </div>
        <div class="modal-body">
          <div class="container-fluid">
            <!-- Row: Keterangan & Unggah Dokumen -->
            <div class="row mb-4">
              <div class="col-md-6">
                <div class="form-group">
                  <label for="remarks"><strong>Keterangan Perubahan:</strong></label>
                  <textarea class="form-control" id="remarks" name="remarks" rows="3" placeholder="Masukkan keterangan perubahan..."></textarea>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <label for="support_doc"><strong>Unggah Dokumen Pendukung:</strong></label>
                  <input type="file" class="form-control" id="support_doc" name="support_doc">
                </div>
              </div>
            </div>
            <!-- Row: Pemilihan Payheads -->
            <div class="row">
              <!-- Kolom: Payheads Tersedia -->
              <div class="col-md-4">
                <div class="card">
                  <div class="card-header bg-secondary text-white">Payheads Tersedia</div>
                  <div class="card-body">
                    <div class="form-group mb-2">
                      <input type="text" id="searchAllPayheads" class="form-control" placeholder="Cari payheads...">
                    </div>
                    <div class="form-group mb-2 text-end">
                      <button type="button" id="selectHeads" class="btn btn-success btn-sm">
                        <i class="fa fa-arrow-circle-right"></i> Tambah ke Pilihan
                      </button>
                    </div>
                    <select id="all_payheads" class="form-control" multiple style="height: 250px;">
                      <!-- Data akan dimasukkan secara dinamis -->
                    </select>
                  </div>
                </div>
              </div>
              <!-- Kolom: Payheads Terpilih -->
              <div class="col-md-4">
                <div class="card">
                  <div class="card-header bg-secondary text-white">Payheads Terpilih</div>
                  <div class="card-body">
                    <div class="form-group mb-2">
                      <input type="text" id="searchSelectedPayheads" class="form-control" placeholder="Cari payheads...">
                    </div>
                    <div class="form-group mb-2 text-end">
                      <button type="button" id="removeHeads" class="btn btn-danger btn-sm">
                        <i class="fa fa-arrow-circle-left"></i> Hapus dari Pilihan
                      </button>
                    </div>
                    <select id="selected_payheads" class="form-control" multiple style="height: 250px;">
                      <!-- Data akan dimasukkan secara dinamis -->
                    </select>
                  </div>
                </div>
              </div>
              <!-- Kolom: Tetapkan Jumlah (Nominal) dengan Tabel -->
              <div class="col-md-4">
                <div class="card">
                  <div class="card-header bg-secondary text-white">Tetapkan Jumlah</div>
                  <div class="card-body" style="max-height: 250px; overflow-y: auto;">
                    <table class="table table-bordered mb-0" id="selected_payamount_table">
                      <thead>
                        <tr>
                          <th style="width: 5%;">No.</th>
                          <th style="width: 55%;">Nama Payhead</th>
                          <th style="width: 40%;">Nominal</th>
                        </tr>
                      </thead>
                      <tbody>
                        <!-- Baris-baris akan ditambahkan secara dinamis -->
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div> <!-- End Row -->
          </div> <!-- End Container Fluid -->
          <!-- Hidden Inputs -->
          <input type="hidden" name="case" value="AssignPayheadsToEmployee">
          <input type="hidden" name="empcode" id="empcode">
          <input type="hidden" name="csrf_token" value="">
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-check-circle"></i> Simpan Payheads
            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
          </button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            <i class="fas fa-times-circle"></i> Batal
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

    <!-- MODAL: View Detail Karyawan -->
    <div class="modal fade" id="viewDetailModal" tabindex="-1" aria-labelledby="viewDetailModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="viewDetailModalLabel"><i class="bi bi-eye-fill"></i> Detail Karyawan</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
          </div>
          <div class="modal-body">
            <table class="table table-bordered">
              <tr><th>ID</th><td id="detailId"></td></tr>
              <tr><th>UID</th><td id="detailUid"></td></tr>
              <tr><th>NIP</th><td id="detailNip"></td></tr>
              <tr><th>Nama</th><td id="detailNama"></td></tr>
              <tr><th>Jenjang Pendidikan</th><td id="detailJenjang"></td></tr>
              <tr><th>Role</th><td id="detailRole"></td></tr>
              <tr><th>Job Title</th><td id="detailJobTitle"></td></tr>
              <tr><th>Status Kerja</th><td id="detailStatusKerja"></td></tr>
              <tr><th>Masa Kerja</th><td id="detailMasaKerja"></td></tr>
              <tr><th>No Rekening</th><td id="detailNoRekening"></td></tr>
              <tr><th>Email</th><td id="detailEmail"></td></tr>
              <tr><th>Jenis Kelamin</th><td id="detailJenisKelamin"></td></tr>
              <tr><th>Agama</th><td id="detailAgama"></td></tr>
              <tr><th>Gaji Pokok</th><td id="detailGajiPokok"></td></tr>
              <tr><th>Nominal Level Indeks</th><td id="detailSalaryIndexNominal"></td></tr>
              <tr><th>Payheads</th><td id="detailPayheads"></td></tr>
              <tr><th>Total Pendapatan</th><td id="detailTotalPendapatan"></td></tr>
              <tr><th>Total Potongan</th><td id="detailTotalPotongan"></td></tr>
              <tr><th>Gaji Bersih</th><td id="detailGajiBersih"></td></tr>
            </table>
          </div>
          <div class="modal-footer">
            <button class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-circle"></i> Tutup</button>
          </div>
        </div>
      </div>
    </div>

    <!-- MODAL: Select Month -->
    <div class="modal fade" id="SalaryMonthModal" tabindex="-1" aria-labelledby="salaryMonthModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-md" style="max-width: 600px;">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="salaryMonthModalLabel"><i class="fa fa-calendar"></i> Pilih Bulan untuk Gaji</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
          </div>
          <div class="modal-body">
            <div class="row text-center">
              <?php
              // Membuat grid bulan: 2 bulan sebelum - 14 bulan ke depan
              $months = [];
              $years  = [];
              $currentYear  = date('Y');
              $currentMonth = date('n');
              $before2Month = $currentMonth - 2;
              $before2Year  = $currentYear;
              for ($i = 0; $i < 16; $i++) {
                  $month = $before2Month + $i;
                  $year  = $before2Year;
                  if ($month <= 0) {
                      $month += 12;
                      $year  -= 1;
                  } elseif ($month > 12) {
                      $month -= 12;
                      $year  += 1;
                  }
                  $months[] = getIndonesianMonthName($month);
                  $years[]  = $year;
              }
              $currentMonthIndo = getIndonesianMonthName(date('n'));
              for ($i = 0; $i < 16; $i++) {
                  $monthName = $months[$i];
                  $yearName  = $years[$i];
                  $highlightClass = ($monthName == $currentMonthIndo && $yearName == date('Y')) ? 'bg-warning font-weight-bold' : '';
                  echo '<div class="col-sm-3 mb-3">';
                  echo '  <div class="' . $highlightClass . '" style="padding:10px; border:1px solid #ddd; border-radius:5px;">';
                  echo '    <a href="#" class="month-link" data-month="' . htmlspecialchars($monthName) . '" data-year="' . htmlspecialchars($yearName) . '" style="color:#333; text-decoration:none;">';
                  echo '      ' . strtoupper(htmlspecialchars($monthName)) . '<br>' . htmlspecialchars($yearName);
                  echo '    </a>';
                  echo '  </div>';
                  echo '</div>';
              }
              ?>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- JS Dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.1.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.1.1/js/buttons.bootstrap4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.1.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.1.1/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.1.1/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.9/js/responsive.bootstrap4.min.js"></script>
    <script src="/payroll_absensi_v2/plugins/bootstrap-notify/bootstrap-notify.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.3/js/sb-admin-2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/autonumeric@4.6.0/dist/autoNumeric.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    $(document).ready(function() {
        $('[data-toggle="tooltip"]').tooltip();

        function initAutoNumeric() {
            AutoNumeric.multiple('.currency-input', {
                digitGroupSeparator: '.',
                decimalCharacter: ',',
                decimalPlaces: 2,
                unformatOnSubmit: true
            });
        }
        initAutoNumeric();

        // Fungsi untuk memperbarui nomor urut pada tabel "Tetapkan Jumlah"
        function updateRowNumbers() {
            $("#selected_payamount_table tbody tr").each(function(index) {
                $(this).find("td:first").text(index + 1);
            });
        }

        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });
        function showToast(message, icon = 'success') {
            Toast.fire({ icon: icon, title: message });
        }

        var empTable = $('#employees').DataTable({
            processing: true,
            serverSide: true,
            ajax: {
                url: 'employees.php?ajax=1',
                type: 'POST',
                data: function(d) {
                    d.case = 'LoadingEmployees';
                    d.jenjang = $('#filterJenjang').val();
                },
                error: function(xhr, error, thrown) {
                    showToast('Terjadi kesalahan saat memuat data karyawan.', 'error');
                }
            },
            columns: [
                { data: 'id' },
                { data: 'uid' },
                { data: 'nip' },
                { data: 'nama' },
                { data: 'jenjang' },
                { data: 'role' },
                { data: 'job_title' },
                { data: 'masa_kerja' },
                { data: 'level_indeks' },
                { data: 'gaji_pokok' },
                { data: 'no_rekening' },
                { data: 'email' },
                { data: 'aksi', orderable: false, searchable: false }
            ],
            order: [[0, 'desc']],
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'colvis',
                    text: '<i class="fas fa-columns"></i> Kolom',
                    className: 'btn btn-warning btn-sm'
                }
            ],
            responsive: true,
            pageLength: 10,
            autoWidth: false
        });

        $('#btnApplyFilter').on('click', function(){
            empTable.ajax.reload();
        });
        $('#btnResetFilter').on('click', function(){
            $('#filterForm')[0].reset();
            empTable.ajax.reload();
        });

        $('#employees tbody').on('click', '.btnEdit', function() {
            var id = $(this).data('id');
            $.ajax({
                url: 'employees.php?ajax=1',
                type: 'POST',
                data: { case: 'ViewEmployeeDetail', id: id },
                dataType: 'json',
                success: function(resp) {
                    if (resp.code === 0) {
                        var e = resp.result;
                        $('#editEmployeeId').val(e.id);
                        $('#editNip').val(e.nip);
                        $('#editNama').val(e.nama);
                        $('#editJenjang').val(e.jenjang);
                        $('#editJobTitle').val(e.job_title);
                        $('#editStatusKerja').val(e.status_kerja);
                        $('#editNoRekening').val(e.no_rekening);
                        $('#editEmail').val(e.email);
                        $('#editJenisKelamin').val(e.jenis_kelamin);
                        $('#editAgama').val(e.agama);
                        $('#editEmployeeModal').modal('show');
                    } else {
                        showToast(resp.result, 'error');
                    }
                },
                error: function(xhr, status, error) {
                    showToast('Terjadi kesalahan saat memuat data karyawan.', 'error');
                }
            });
        });
        $('#editEmployeeForm').on('submit', function(e) {
            e.preventDefault();
            var form = $(this);
            var dataToSend = {
                case: 'EditEmployee',
                id: $('#editEmployeeId').val(),
                no_rekening: $('#editNoRekening').val()
            };
            $.ajax({
                url: 'employees.php?ajax=1',
                type: 'POST',
                data: dataToSend,
                dataType: 'json',
                beforeSend: function(){
                    form.find('button[type="submit"]').prop('disabled', true);
                    form.find('.spinner-border').removeClass('d-none');
                },
                success: function(resp){
                    form.find('button[type="submit"]').prop('disabled', false);
                    form.find('.spinner-border').addClass('d-none');
                    if(resp.code === 0){
                        showToast(resp.result, 'success');
                        empTable.ajax.reload(null, false);
                        $('#editEmployeeModal').modal('hide');
                    } else {
                        showToast(resp.result, 'error');
                    }
                },
                error: function(){
                    form.find('button[type="submit"]').prop('disabled', false);
                    form.find('.spinner-border').addClass('d-none');
                    showToast('Terjadi kesalahan saat memperbarui data karyawan.', 'error');
                }
            });
        });
        $('#employees tbody').on('click', '.btnViewDetail', function(){
            var id = $(this).data('id');
            $.ajax({
                url:'employees.php?ajax=1',
                type:'POST',
                data:{ case: 'ViewEmployeeDetail', id: id },
                dataType:'json',
                success:function(resp){
                    if(resp.code === 0){
                        var e = resp.result;
                        $('#detailId').text(e.id);
                        $('#detailUid').text(e.uid);
                        $('#detailNip').text(e.nip);
                        $('#detailNama').text(e.nama);
                        $('#detailJenjang').text(e.jenjang);
                        $('#detailRole').text(e.role);
                        $('#detailJobTitle').text(e.job_title);
                        $('#detailStatusKerja').text(e.status_kerja);
                        $('#detailMasaKerja').text(e.masa_kerja);
                        $('#detailNoRekening').text(e.no_rekening);
                        $('#detailEmail').text(e.email);
                        $('#detailJenisKelamin').text(
                            e.jenis_kelamin === 'L' ? 'Laki-laki' :
                            e.jenis_kelamin === 'P' ? 'Perempuan'  : '-'
                        );
                        $('#detailAgama').text(e.agama);
                        $('#detailGajiPokok').text(e.gaji_pokok);
                        let baseSalary = parseFloat(e.salary_index_base) || 0;
                        $('#detailSalaryIndexNominal').text('Rp ' + baseSalary.toLocaleString('id-ID', {minimumFractionDigits:2}));
                        if(e.payheads && e.payheads.length > 0){
                            var s = '<ul>';
                            e.payheads.forEach(function(ph){
                                var nominal = parseFloat(ph.amount).toLocaleString('id-ID',{minimumFractionDigits:2});
                                var jns = (ph.jenis_payhead === 'earnings') ? 'Pendapatan' : 'Potongan';
                                var clr = (ph.jenis_payhead==='earnings') ? 'green' : 'red';
                                s += <li style="color:${clr}">${ph.nama_payhead} (${jns}): Rp ${nominal}</li>;
                            });
                            s += '</ul>';
                            $('#detailPayheads').html(s);
                        } else {
                            $('#detailPayheads').html('<i>Tidak ada payheads</i>');
                        }
                        $('#detailTotalPendapatan').text('Rp ' + parseFloat(e.total_pendapatan).toLocaleString('id-ID',{minimumFractionDigits:2}));
                        $('#detailTotalPotongan').text('Rp ' + parseFloat(e.total_potongan).toLocaleString('id-ID',{minimumFractionDigits:2}));
                        $('#detailGajiBersih').text('Rp ' + parseFloat(e.gaji_bersih).toLocaleString('id-ID',{minimumFractionDigits:2}));
                        $('#viewDetailModal').modal('show');
                    } else {
                        showToast(resp.result, 'error');
                    }
                },
                error:function(){
                    showToast('Terjadi kesalahan saat mengambil detail karyawan.', 'error');
                }
            });
        });
        $('#employees tbody').on('click', '.btnAssignPayheads', function(){
            var id = $(this).data('id');
            $('#empcode').val(id);
            $('#all_payheads').empty();
            $('#selected_payheads').empty();
            // Kosongkan tabel "Tetapkan Jumlah"
            $("#selected_payamount_table tbody").empty();
            $.ajax({
                type: "POST",
                dataType: "json",
                url: 'employees.php?ajax=1',
                data: { case: 'ViewEmployeeDetail', id: id },
                success: function(result) {
                    if(result.code === 0) {
                        var assignedPayheads = result.result.payheads; 
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            url: 'employees.php?ajax=1',
                            data: { case: 'GetAllPayheads' },
                            success: function(allPayheadsResult) {
                                if(allPayheadsResult.code === 0) {
                                    var allPayheadsList = allPayheadsResult.result;
                                    var assignedIds = assignedPayheads.map(function(ph){
                                        return parseInt(ph.id_payhead, 10);
                                    });
                                    var availablePayheads = allPayheadsList.filter(function(ph) {
                                        return !assignedIds.includes(parseInt(ph.id, 10));
                                    });
                                    availablePayheads.forEach(function(ph){
                                        // Simpan nilai nominal default di data attribute
                                        var defaultNominal = parseFloat(ph.nominal).toLocaleString('id-ID', { minimumFractionDigits:2 });
                                        // Tampilkan hanya nama payhead dan jenis (tanpa nominal)
                                        var optionText = ph.nama_payhead + ' (' + ph.jenis_payhead_idn + ')';
                                        var option = $("<option></option>")
                                            .attr("value", ph.id)
                                            .attr("data-nominal", ph.nominal)
                                            .text(optionText)
                                            .addClass(ph.jenis_payhead === 'earnings' ? 'text-success' : 'text-danger');
                                        $('#all_payheads').append(option);
                                    });

                                    assignedPayheads.forEach(function(ap){
                                        var payheadId = ap.id_payhead;
                                        var payheadName = ap.nama_payhead + ' (' + ap.jenis_payhead_idn + ')';
                                        var option = $("<option></option>")
                                            .attr("value", payheadId)
                                            .text(payheadName)
                                            .addClass(ap.jenis_payhead === 'earnings' ? 'text-success' : 'text-danger');
                                        $('#selected_payheads').append(option);
                                        // Tambahkan baris ke tabel "Tetapkan Jumlah"
                                        var row = 
                                            <tr id="payhead-row-${payheadId}">
                                              <td></td>
                                              <td>${payheadName}</td>
                                              <td>
                                                <input type="text" name="pay_amounts[${payheadId}]" 
                                                       class="form-control currency-input" 
                                                       value="${ap.amount || 0}" required>
                                              </td>
                                            </tr>
                                        ;
                                        $("#selected_payamount_table tbody").append(row);
                                    });
                                    updateRowNumbers();
                                    initAutoNumeric();
                                    $('#ManageModal').modal('show');
                                } else {
                                    showToast(allPayheadsResult.result, 'error');
                                }
                            },
                            error: function(){
                                showToast('Terjadi kesalahan saat memuat semua payheads.', 'error');
                            }
                        });
                    } else {
                        showToast(result.result, 'error');
                    }
                },
                error: function(){
                    showToast('Terjadi kesalahan saat load payheads.', 'error');
                }
            });
        });
        $('#assign-payhead-form').on('submit', function(e){
            e.preventDefault();
            var form = $(this);
            var empId = $('#empcode').val();
            var payHeads = [];
            $('#selected_payheads option').each(function() {
                payHeads.push($(this).val());
            });
            var payAmounts = {};
            payHeads.forEach(function(payheadId){
                var amount = $('input[name="pay_amounts[' + payheadId + ']"]').val();
                payAmounts[payheadId] = amount;
            });
            var isValid = true;
            payHeads.forEach(function(payheadId){
                var amount = payAmounts[payheadId];
                if(amount === '' || parseFloat(amount) < 0){
                    $('input[name="pay_amounts[' + payheadId + ']"]').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('input[name="pay_amounts[' + payheadId + ']"]').removeClass('is-invalid');
                }
            });
            if(!isValid){
                showToast('Pastikan semua jumlah payhead valid (>=0)!', 'error');
                return;
            }
            var formData = new FormData(this);
            formData.append('payheads', JSON.stringify(payHeads));
            formData.append('pay_amounts', JSON.stringify(payAmounts));
            $.ajax({
                url:'employees.php?ajax=1',
                type:'POST',
                data: formData,
                dataType:'json',
                processData: false,
                contentType: false,
                beforeSend:function(){
                    form.find('button[type="submit"]').prop('disabled', true);
                    form.find('.spinner-border').removeClass('d-none');
                },
                success:function(resp){
                    form.find('button[type="submit"]').prop('disabled', false);
                    form.find('.spinner-border').addClass('d-none');
                    if(resp.code === 0){
                        showToast(resp.result, 'success');
                        empTable.ajax.reload(null, false);
                        setTimeout(function(){
                            $('#ManageModal').modal('hide');
                            form[0].reset();
                            $('#all_payheads').empty();
                            $('#selected_payheads').empty();
                            $("#selected_payamount_table tbody").empty();
                        }, 200);
                    } else {
                        showToast(resp.result, 'error');
                    }
                },
                error:function(){
                    form.find('button[type="submit"]').prop('disabled', false);
                    form.find('.spinner-border').addClass('d-none');
                    showToast('Terjadi kesalahan saat menetapkan payheads.', 'error');
                }
            });
        });
        $('#ManageModal').on('click', '#removeHeads', function(){
            var selectedOptions = $('#selected_payheads option:selected');
            if(selectedOptions.length === 0){
                showToast('Pilih setidaknya satu payhead untuk dihapus.', 'info');
                return;
            }
            selectedOptions.each(function(){
                var payheadId = $(this).val();
                var payheadName = $(this).text();
                $(this).remove();
                // Hapus baris pada tabel "Tetapkan Jumlah"
                $("#payhead-row-" + payheadId).remove();
                updateRowNumbers();
                var jenisPayhead = (payheadName.includes('(Pendapatan)')) ? 'earnings' : 'deductions';
                var option = $("<option></option>")
                    .attr("value", payheadId)
                    .text(payheadName)
                    .addClass(jenisPayhead === 'earnings' ? 'text-success' : 'text-danger');
                $('#all_payheads').append(option);
            });
        });
        $('#ManageModal').on('click', '#selectHeads', function(){
            var selectedOptions = $('#all_payheads option:selected');
            if(selectedOptions.length === 0){
                showToast('Pilih setidaknya satu payhead untuk ditetapkan.', 'info');
                return;
            }
            selectedOptions.each(function(){
                var payheadId = $(this).val();
                var payheadName = $(this).text();
                var jenisPayhead = $(this).hasClass('text-success') ? 'earnings' : 'deductions';
                var defaultNominal = $(this).attr("data-nominal") || "0";
                if($('#selected_payheads option[value="' + payheadId + '"]').length === 0){
                    var option = $("<option></option>")
                        .attr("value", payheadId)
                        .text(payheadName)
                        .addClass(jenisPayhead === 'earnings' ? 'text-success' : 'text-danger');
                    $('#selected_payheads').append(option);
                    // Tambahkan baris ke tabel "Tetapkan Jumlah"
                    var row = 
                        <tr id="payhead-row-${payheadId}">
                          <td></td>
                          <td>${payheadName}</td>
                          <td>
                            <input type="text" name="pay_amounts[${payheadId}]" 
                                   class="form-control currency-input" 
                                   value="${parseFloat(defaultNominal).toLocaleString('id-ID', { minimumFractionDigits:2 })}" required>
                          </td>
                        </tr>
                    ;
                    $("#selected_payamount_table tbody").append(row);
                    updateRowNumbers();
                    $(this).remove();
                }
            });
            initAutoNumeric();
        });

        $('#employees tbody').on('click', '.btnSelectMonth', function() {
            var employeeId = $(this).data('id');
            window.currentEmpId = employeeId;
            $('#SalaryMonthModal').modal('show');
        });
        $(document).on('click', '.month-link', function(e) {
            e.preventDefault();
            var monthName = $(this).data('month');
            var yearName = $(this).data('year');
            var employeeId = window.currentEmpId || 0;
            if (employeeId === 0) {
                showToast('ID Karyawan tidak valid!', 'error');
                return;
            }
            var targetUrl = "/payroll_absensi_v2/payroll/keuangan/manage-salary.php";
            targetUrl += "?id_anggota=" + employeeId;
            targetUrl += "&bulan=" + encodeURIComponent(monthName);
            targetUrl += "&tahun=" + encodeURIComponent(yearName);
            window.location.href = targetUrl;
        });
    });
    </script>
</body>
</html>

2. manage-salary.php :
<?php
// File: /payroll_absensi_v2/payroll/keuangan/manage-salary.php
session_start();

// 1. Cek Role
if (!isset($_SESSION['role']) || !in_array($_SESSION['role'], ['keuangan', 'superadmin'])) {
    header("Location: /payroll_absensi_v2/login.php");
    exit();
}

// 2. Include Koneksi dan Helpers
require_once __DIR__ . '/../../koneksi.php';
require_once __DIR__ . '/../../helpers.php';

// 3. Inisialisasi Error Handling dan CSRF Token
init_error_handling();
generate_csrf_token();

/**
 * Fungsi konversi nama bulan (English) -> integer (1–12).
 */
function monthNameToInt($monthName) {
    $lower = strtolower($monthName);
    $map = [
        'januari'   => 1,
        'februari'  => 2,
        'maret'     => 3,
        'april'     => 4,
        'mei'       => 5,
        'juni'      => 6,
        'juli'      => 7,
        'agustus'   => 8,
        'september' => 9,
        'oktober'   => 10,
        'november'  => 11,
        'desember'  => 12
    ];
    return isset($map[$lower]) ? $map[$lower] : 0;
}


// ==================================================================
// BAGIAN AJAX: Update / Delete Payhead / Reject Payroll
// ==================================================================
if (isset($_GET['ajax']) && $_GET['ajax'] == '1') {
    if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
        send_response(405, 'Metode Permintaan Tidak Diizinkan.');
    }
    $csrf_token = isset($_POST['csrf_token']) ? $_POST['csrf_token'] : '';
    verify_csrf_token($csrf_token);
    $case = isset($_POST['case']) ? bersihkan_input($_POST['case']) : '';

    switch($case) {
        case 'UpdatePayhead':
            $id_anggota  = isset($_POST['id_anggota']) ? intval($_POST['id_anggota']) : 0;
            $id_payhead  = isset($_POST['id_payhead']) ? intval($_POST['id_payhead']) : 0;
            $amount      = isset($_POST['amount']) ? floatval($_POST['amount']) : 0;
            if ($id_anggota <= 0 || $id_payhead <= 0) {
                send_response(1, 'Parameter invalid.');
            }
            $stmt = $conn->prepare("
                UPDATE employee_payheads
                   SET amount = ?
                 WHERE id_anggota = ? AND id_payhead = ?
            ");
            if (!$stmt) {
                send_response(1, 'Prepare failed: ' . $conn->error);
            }
            $stmt->bind_param("dii", $amount, $id_anggota, $id_payhead);
            if ($stmt->execute()) {
                $stmt->close();
                $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;
                $details = "Memperbarui Payhead ID $id_payhead untuk Karyawan ID $id_anggota dengan jumlah Rp " 
                           . number_format($amount, 2, ',', '.');
                if(!add_audit_log($conn, $user_id, 'UpdatePayhead', $details)){
                    send_response(1, 'Payhead berhasil diupdate, tetapi gagal mencatat audit log.');
                }
                send_response(0, 'Payhead berhasil diupdate.');
            } else {
                $stmt->close();
                send_response(1, 'Gagal update payhead: ' . $stmt->error);
            }
            break;

        case 'RejectPayroll': // <-- MODIFIKASI
            $id_anggota = isset($_POST['id_anggota']) ? intval($_POST['id_anggota']) : 0;
            if ($id_anggota <= 0) {
                send_response(1, 'Parameter tidak valid (reject).');
            }
            // Ubah status employee_payheads => 'revisi'
            $stmtReject = $conn->prepare("
                UPDATE employee_payheads
                   SET status = 'revisi'
                 WHERE id_anggota=? 
                   AND status IN ('draft')
            ");
            $stmtReject->bind_param("i", $id_anggota);
            if ($stmtReject->execute()) {
                $stmtReject->close();
                send_response(0, 'Payroll ditolak. Status payheads = revisi.');
            } else {
                $stmtReject->close();
                send_response(1, 'Gagal menolak payroll: ' . $stmtReject->error);
            }
            break;

        case 'DeletePayhead':
            $id_anggota  = isset($_POST['id_anggota']) ? intval($_POST['id_anggota']) : 0;
            $id_payhead  = isset($_POST['id_payhead']) ? intval($_POST['id_payhead']) : 0;
            if ($id_anggota <= 0 || $id_payhead <= 0) {
                send_response(1, 'Parameter invalid.');
            }
            $stmtDel = $conn->prepare("
                DELETE FROM employee_payheads
                 WHERE id_anggota=? AND id_payhead=?
            ");
            if (!$stmtDel) {
                send_response(1, 'Prepare failed: ' . $conn->error);
            }
            $stmtDel->bind_param("ii", $id_anggota, $id_payhead);
            if ($stmtDel->execute()) {
                $stmtDel->close();
                $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;
                $details = "Menghapus Payhead ID $id_payhead untuk Karyawan ID $id_anggota.";
                if(!add_audit_log($conn, $user_id, 'DeletePayhead', $details)){
                    send_response(1, 'Payhead berhasil dihapus, tetapi gagal mencatat audit log.');
                }
                send_response(0, 'Payhead berhasil dihapus.');
            } else {
                $stmtDel->close();
                send_response(1, 'Gagal hapus payhead: ' . $stmtDel->error);
            }
            break;

        default:
            send_response(1, 'Case tidak dikenali.');
            break;
    }
    exit;
}

// ==================================================================
// BAGIAN POST => Proses Insert payroll dan payroll_detail
// ==================================================================
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $csrf_token = isset($_POST['csrf_token']) ? $_POST['csrf_token'] : '';
    verify_csrf_token($csrf_token);

    // Gunakan nilai POST, jika tidak ada, fallback ke GET (jika ada)
    $id_anggota       = isset($_POST['id_anggota'])       ? intval($_POST['id_anggota'])       : (isset($_GET['id_anggota']) ? intval($_GET['id_anggota']) : 0);
    $bulan_int        = isset($_POST['bulan_int'])        ? intval($_POST['bulan_int'])        : (isset($_GET['bulan_int']) ? intval($_GET['bulan_int']) : 0);
    $tahun            = isset($_POST['tahun'])            ? intval($_POST['tahun'])            : (isset($_GET['tahun']) ? intval($_GET['tahun']) : 0);
    $id_rekap_absensi = isset($_POST['id_rekap_absensi']) ? intval($_POST['id_rekap_absensi']) : (isset($_GET['id_rekap_absensi']) ? intval($_GET['id_rekap_absensi']) : 0);

    // Jika ada parameter lain (misalnya no_rekening, gaji_pokok, dll.) ambil dari POST
    $no_rekening      = isset($_POST['no_rekening'])      ? bersihkan_input($_POST['no_rekening']) : '';
    $gaji_pokok       = isset($_POST['gaji_pokok'])       ? floatval($_POST['gaji_pokok'])       : 0;
    $total_earnings   = isset($_POST['total_earnings'])   ? floatval($_POST['total_earnings'])   : 0;
    $total_deductions = isset($_POST['total_deductions']) ? floatval($_POST['total_deductions']) : 0;
    $payheads_ids     = isset($_POST['payheads_ids'])     ? $_POST['payheads_ids']              : [];
    $payheads_jenis   = isset($_POST['payheads_jenis'])   ? $_POST['payheads_jenis']            : [];
    $payheads_amount  = isset($_POST['payheads_amount'])  ? $_POST['payheads_amount']           : [];
    $catatan          = isset($_POST['inputDescription']) ? bersihkan_input($_POST['inputDescription']) : '';
    $tgl_payroll      = isset($_POST['tgl_payroll'])      ? bersihkan_input($_POST['tgl_payroll'])      : date('Y-m-d H:i:s');

    // Validasi parameter
    if ($id_anggota <= 0 || $bulan_int <= 0 || $tahun <= 0 || $id_rekap_absensi <= 0) {
        var_dump($_POST);  // Debug: untuk memeriksa data yang dikirim
        die("Parameter tidak valid.");
    }
    
    $conn->begin_transaction();
    try {
        // ------------------------------------------------------------------
        // (A) Update payheads menjadi 'final' sebelum insert payroll
        // ------------------------------------------------------------------
        $stmtToFinal = $conn->prepare("
            UPDATE employee_payheads
               SET status='final'
             WHERE id_anggota=? 
               AND status IN ('draft','revisi')
        "); // <-- MODIFIKASI
        if (!$stmtToFinal) {
            throw new Exception("Gagal prepare update status payheads: " . $conn->error);
        }
        $stmtToFinal->bind_param("i", $id_anggota);
        if (!$stmtToFinal->execute()) {
            throw new Exception("Gagal update status payheads: " . $stmtToFinal->error);
        }
        $stmtToFinal->close();

        // ------------------------------------------------------------------
        // (B) Insert ke tabel payroll
        // ------------------------------------------------------------------
        $stmtPayroll = $conn->prepare("
            INSERT INTO payroll (
                id_anggota, bulan, tahun, tgl_payroll,
                gaji_pokok, total_pendapatan, total_potongan, gaji_bersih,
                no_rekening, catatan, id_rekap_absensi
            )
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        ");
        if (!$stmtPayroll) {
            throw new Exception("Prepare payroll gagal: " . $conn->error);
        }
        $gaji_bersih = $gaji_pokok + $total_earnings - $total_deductions;
        $stmtPayroll->bind_param(
            "iiisddddssi",
            $id_anggota,
            $bulan_int,
            $tahun,
            $tgl_payroll,
            $gaji_pokok,
            $total_earnings,
            $total_deductions,
            $gaji_bersih,
            $no_rekening,
            $catatan,
            $id_rekap_absensi
        );
        if (!$stmtPayroll->execute()) {
            throw new Exception("Gagal insert payroll: " . $stmtPayroll->error);
        }
        $id_payroll = $stmtPayroll->insert_id;
        $stmtPayroll->close();

        // ------------------------------------------------------------------
        // (C) Insert detail payheads ke payroll_detail
        // ------------------------------------------------------------------
        $stmtDetail = $conn->prepare("
            INSERT INTO payroll_detail (id_payroll, id_payhead, jenis, amount)
            VALUES (?, ?, ?, ?)
        ");
        if (!$stmtDetail) {
            throw new Exception("Prepare payroll_detail gagal: " . $conn->error);
        }
        foreach ($payheads_ids as $index => $id_payhead) {
            $jenis  = isset($payheads_jenis[$index]) ? bersihkan_input($payheads_jenis[$index]) : '';
            $amount = isset($payheads_amount[$index]) ? floatval($payheads_amount[$index]) : 0;
            $stmtDetail->bind_param("iisd", $id_payroll, $id_payhead, $jenis, $amount);
            if (!$stmtDetail->execute()) {
                throw new Exception("Gagal insert payroll_detail: " . $stmtDetail->error);
            }
        }
        $stmtDetail->close();

        // Commit transaksi
        $conn->commit();

        // Audit log
        $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;
        $details = "Membuat Payroll ID $id_payroll untuk Karyawan ID $id_anggota pada bulan $bulan_int tahun $tahun. "
                 . "Pendapatan = Rp " . number_format($total_earnings, 2, ',', '.') 
                 . ", Potongan = Rp " . number_format($total_deductions, 2, ',', '.') 
                 . ", Gaji Bersih = Rp " . number_format($gaji_bersih, 2, ',', '.');
        if(!add_audit_log($conn, $user_id, 'InsertPayroll', $details)){
            error_log("Gagal mencatat audit log untuk InsertPayroll ID $id_payroll.");
        }

        // Redirect ke halaman detail payroll
        header("Location: payroll-details.php?id_payroll=$id_payroll");
        exit();

    } catch (Exception $e) {
        $conn->rollback();
        die("Terjadi kesalahan: " . $e->getMessage());
    }

} else {
    // ==================================================================
    // BAGIAN GET => Review Payroll (Belum Insert ke payroll)
    // ==================================================================
    $id_anggota = isset($_GET['id_anggota']) ? intval($_GET['id_anggota']) : 0;
    $bulanName  = isset($_GET['bulan']) ? bersihkan_input($_GET['bulan']) : '';
    $tahunStr   = isset($_GET['tahun']) ? bersihkan_input($_GET['tahun']) : '';
    $tglPayrollParam = isset($_GET['tgl']) ? bersihkan_input($_GET['tgl']) : date('Y-m-d H:i:s');

    if ($id_anggota <= 0 || empty($bulanName) || empty($tahunStr)) {
        die("Parameter tidak valid.");
    }
    $bulan = monthNameToInt($bulanName);
    $tahun = intval($tahunStr);
    if ($bulan <=0 || $tahun<=0) {
        die("Parameter bulan/tahun tidak valid.");
    }

    // Cek apakah payroll sudah ada
    $stmtCheck = $conn->prepare("
        SELECT id FROM payroll
         WHERE id_anggota=? AND bulan=? AND tahun=?
         LIMIT 1
    ");
    if (!$stmtCheck) {
        die("Prepare gagal: " . $conn->error);
    }
    $stmtCheck->bind_param("iii", $id_anggota, $bulan, $tahun);
    $stmtCheck->execute();
    $resCheck = $stmtCheck->get_result();
    if ($resCheck->num_rows > 0) {
        // Jika sudah ada, langsung arahkan ke detail payroll
        $payroll = $resCheck->fetch_assoc();
        $stmtCheck->close();
        $id_payroll = $payroll['id'];
        header("Location: payroll-details.php?id_payroll=$id_payroll");
        exit();
    }
    $stmtCheck->close();

    // Pastikan rekap_absensi ada
    $stmtRekap = $conn->prepare("
        SELECT id FROM rekap_absensi
         WHERE id_anggota=? AND bulan=? AND tahun=?
         LIMIT 1
    ");
    if (!$stmtRekap) {
        die("Prepare rekap gagal: " . $conn->error);
    }
    $stmtRekap->bind_param("iii", $id_anggota, $bulan, $tahun);
    $stmtRekap->execute();
    $resRekap = $stmtRekap->get_result();
    if ($resRekap->num_rows > 0) {
        $rowRekap = $resRekap->fetch_assoc();
        $id_rekap_absensi = $rowRekap['id'];
    } else {
        // Jika belum ada rekap_absensi, buat default
        $stmtIns = $conn->prepare("
            INSERT INTO rekap_absensi
              (id_anggota, bulan, tahun,
               total_hadir, total_izin, total_cuti, total_tanpa_keterangan, total_sakit)
            VALUES (?, ?, ?, 0,0,0,0,0)
        ");
        $stmtIns->bind_param("iii", $id_anggota, $bulan, $tahun);
        if (!$stmtIns->execute()) {
            die("Gagal insert rekap_absensi: " . $stmtIns->error);
        }
        $id_rekap_absensi = $stmtIns->insert_id;
        $stmtIns->close();
    }
    $stmtRekap->close();

    // Ambil data payhead (status, remarks, dokumen)
    $stmtPH = $conn->prepare("
        SELECT ep.id_payhead, ph.nama_payhead, ph.jenis, ep.amount,
               ep.status, ep.remarks, ep.support_doc_path
          FROM employee_payheads ep
          JOIN payheads ph ON ep.id_payhead = ph.id
         WHERE ep.id_anggota=?
    ");
    if (!$stmtPH) {
        die("Prepare payheads gagal: " . $conn->error);
    }
    $stmtPH->bind_param("i", $id_anggota);
    $stmtPH->execute();
    $resPH = $stmtPH->get_result();
    $payheads = [];
    while($r = $resPH->fetch_assoc()){
        $payheads[] = $r;
    }
    $stmtPH->close();

    // Ambil data karyawan
    $stmtKar = $conn->prepare("SELECT * FROM anggota_sekolah WHERE id=? LIMIT 1");
    if (!$stmtKar) {
        die("Prepare karyawan gagal: " . $conn->error);
    }
    $stmtKar->bind_param("i", $id_anggota);
    $stmtKar->execute();
    $resKar = $stmtKar->get_result();
    if ($resKar->num_rows == 0) {
        die("Karyawan tidak ditemukan.");
    }
    $karyawan = $resKar->fetch_assoc();
    $stmtKar->close();

    // Level indeks
    $salary_index_level = '';
    $salary_index_amount = 0;
    if (!empty($karyawan['salary_index_id'])) {
        $stmtIndex = $conn->prepare("SELECT level, base_salary FROM salary_indices WHERE id = ?");
        if ($stmtIndex) {
            $stmtIndex->bind_param("i", $karyawan['salary_index_id']);
            $stmtIndex->execute();
            $resultIndex = $stmtIndex->get_result();
            if ($resultIndex->num_rows > 0) {
                $salaryData = $resultIndex->fetch_assoc();
                $salary_index_level = $salaryData['level'];
                $salary_index_amount = (float)$salaryData['base_salary'];
            }
            $stmtIndex->close();
        }
    }
    // Gaji pokok + base salary (index)
    $gaji_pokok_employee = (float)($karyawan['gaji_pokok'] ?? 0);
    $gaji_pokok = $gaji_pokok_employee + $salary_index_amount;

    // Hitung total earnings & deductions
    $total_earnings = 0;
    $total_deductions = 0;
    foreach($payheads as $ph) {
        if ($ph['jenis'] === 'earnings') {
            $total_earnings += (float)$ph['amount'];
        } else {
            $total_deductions += (float)$ph['amount'];
        }
    }
    $gaji_kotor  = $gaji_pokok + $total_earnings;
    $gaji_bersih = $gaji_kotor - $total_deductions;

    $masa_kerja = ((int)($karyawan['masa_kerja_tahun'] ?? 0)) 
                . " Tahun, " 
                . ((int)($karyawan['masa_kerja_bulan'] ?? 0)) 
                . " Bulan";

    $namaKaryawan = $karyawan['nama'] ?? '';
    $noRek        = $karyawan['no_rekening'] ?? '';
    $catatan      = "";

    // Audit log: menandakan kunjungan
    $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;
    $details = "Mengakses Review Payroll untuk Karyawan ID $id_anggota pada bulan $bulan tahun $tahun.";
    if(!add_audit_log($conn, $user_id, 'ViewPayroll', $details)){
        error_log("Gagal mencatat audit log untuk ViewPayroll ID $id_anggota.");
    }
?>
<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <title>Review Payroll - <?= htmlspecialchars($namaKaryawan); ?></title>
  <!-- Sertakan AdminLTE, FontAwesome, dan AutoNumeric -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/css/adminlte.min.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css">
  <style>
    .content-wrapper { margin-left: 0; }
    .main-header.navbar { width: 100%; }
    .footer.main-footer { width: 100%; margin-left: 0; }
  </style>
  <script>
      const CSRF_TOKEN = '<?= htmlspecialchars($_SESSION['csrf_token'] ?? ''); ?>';
  </script>
</head>
<body>
<div class="wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6"><h1 class="m-0">Review Payroll Karyawan</h1></div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Review Payroll</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Main content -->
    <section class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- Kolom Kiri -->
            <div class="col-md-6">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">General</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Nama Karyawan -->
                        <div class="form-group">
                            <label for="inputName">Nama Karyawan</label>
                            <input type="text" id="inputName" class="form-control" 
                                   value="<?= htmlspecialchars($namaKaryawan); ?>" readonly>
                        </div>
                        <!-- Catatan / Deskripsi -->
                        <div class="form-group">
                            <label for="inputDescription">Catatan / Deskripsi Payroll</label>
                            <textarea id="inputDescription" class="form-control" rows="3" placeholder="Tambah catatan jika perlu..."></textarea>
                        </div>
                        <!-- Periode Gaji -->
                        <div class="form-group">
                            <label for="inputStatus">Periode Gaji</label>
                            <input type="text" id="inputStatus" class="form-control" 
                                   value="<?= htmlspecialchars($bulanName . ' ' . $tahun); ?>" readonly>
                        </div>
                        <!-- Masa Kerja -->
                        <div class="form-group">
                            <label for="inputMasaKerja">Masa Kerja</label>
                            <input type="text" id="inputMasaKerja" class="form-control" 
                                   value="<?= htmlspecialchars($masa_kerja); ?>" readonly>
                        </div>
                        <!-- Level Indeks -->
                        <div class="form-group">
                            <label for="inputLevelIndeks">Level Indeks</label>
                            <input type="text" id="inputLevelIndeks" class="form-control" 
                                   value="<?= htmlspecialchars($salary_index_level
                                             ? $salary_index_level . ' (Rp ' 
                                               . number_format($salary_index_amount, 2, ',', '.') . ')' 
                                             : 'Belum ada'); ?>" 
                                   readonly>
                        </div>
                        <!-- No Rekening -->
                        <div class="form-group">
                            <label for="inputNoRek">No. Rekening</label>
                            <input type="text" id="inputNoRek" class="form-control" 
                                   value="<?= htmlspecialchars($noRek); ?>">
                        </div>
                        <!-- Tanggal Payroll -->
                        <div class="form-group">
                            <label for="inputTanggalPayroll">Tanggal Payroll</label>
                            <input type="datetime-local" id="inputTanggalPayroll" class="form-control" 
                                   value="<?= htmlspecialchars(date('Y-m-d\TH:i', strtotime($tglPayrollParam))); ?>" 
                                   required>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Kolom Kanan -->
            <div class="col-md-6">
                <div class="card card-secondary">
                    <div class="card-header">
                        <h3 class="card-title">Payroll Calculation</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Gaji Pokok -->
                        <div class="form-group">
                            <label for="inputGajiPokok">Gaji Pokok</label>
                            <input type="text" id="inputGajiPokok" class="form-control currency-input" 
                                   value="<?= htmlspecialchars($gaji_pokok); ?>">
                        </div>
                        <!-- Total Earnings -->
                        <div class="form-group">
                            <label for="inputTotalEarnings">Total Pendapatan (Payheads)</label>
                            <input type="text" id="inputTotalEarnings" class="form-control currency-input" 
                                   value="<?= htmlspecialchars($total_earnings); ?>" readonly>
                        </div>
                        <!-- Total Deductions -->
                        <div class="form-group">
                            <label for="inputTotalDeductions">Total Potongan</label>
                            <input type="text" id="inputTotalDeductions" class="form-control currency-input" 
                                   value="<?= htmlspecialchars($total_deductions); ?>" readonly>
                        </div>
                        <!-- Estimasi Gaji Bersih -->
                        <div class="form-group">
                            <label for="inputNetSalary">Estimasi Gaji Bersih</label>
                            <input type="text" id="inputNetSalary" class="form-control currency-input" 
                                   value="<?= htmlspecialchars($gaji_bersih); ?>" readonly>
                        </div>
                    </div>
                </div>

                <!-- Card Info Payheads -->
                <div class="card card-info">
                    <div class="card-header">
                        <h3 class="card-title">Payheads</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered">
                                <thead>
                                  <tr>
                                    <th>Nama Payhead</th>
                                    <th>Jenis</th>
                                    <th>Nominal</th>
                                    <!-- Kolom baru: Status -->
                                    <th>Status</th>
                                    <!-- Kolom baru: Remarks -->
                                    <th>Keterangan</th>
                                    <!-- Kolom baru: Dokumen -->
                                    <th>Dokumen</th>
                                    <th class="text-right">Aksi</th>
                                  </tr>
                                </thead>
                                <tbody>
                                <?php if (empty($payheads)): ?>
                                    <tr><td colspan="7" class="text-center"><em>Belum ada payhead</em></td></tr>
                                <?php else: ?>
                                    <?php foreach($payheads as $ph): ?>
                                        <tr>
                                            <td><?= htmlspecialchars($ph['nama_payhead']); ?></td>
                                            <td><?= htmlspecialchars(ucfirst($ph['jenis'])); ?></td>
                                            <td><?= number_format($ph['amount'],2,',','.'); ?></td>
                                            <td><?= htmlspecialchars($ph['status']); ?></td>
                                            <td>
                                               <?php if (!empty($ph['remarks'])): ?>
                                                   <small><em><?= htmlspecialchars($ph['remarks']); ?></em></small>
                                               <?php else: ?>
                                                   <small><em>-</em></small>
                                               <?php endif; ?>
                                            </td>
                                            <td>
                                               <?php if (!empty($ph['support_doc_path'])): ?>
                                                   <a href="<?= htmlspecialchars($ph['support_doc_path']); ?>" 
                                                      target="_blank">Lihat Dokumen</a>
                                               <?php else: ?>
                                                   <em>-</em>
                                               <?php endif; ?>
                                            </td>
                                            <td class="text-right py-0 align-middle">
                                                <div class="btn-group btn-group-sm">
                                                    <button class="btn btn-info btnEditPayhead"
                                                            data-idpayhead="<?= htmlspecialchars($ph['id_payhead']); ?>"
                                                            data-amount="<?= htmlspecialchars($ph['amount']); ?>"
                                                            data-jenis="<?= htmlspecialchars($ph['jenis']); ?>">
                                                        <i class="fas fa-pen"></i>
                                                    </button>
                                                    <button class="btn btn-danger btnDeletePayhead"
                                                            data-idpayhead="<?= htmlspecialchars($ph['id_payhead']); ?>">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    <?php endforeach; ?>
                                <?php endif; ?>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- /.card-info -->
            </div>
            <!-- /Kolom Kanan -->
        </div>
        <!-- Tombol Bawah -->
        <div class="row">
            <div class="col-12">
                <a href="/payroll_absensi_v2/payroll/keuangan/employees.php" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Cancel
                </a>

                <!-- Form Insert Payroll -->
                <form action="" method="POST" style="display:inline;">
                    <input type="hidden" name="id_anggota" value="<?= htmlspecialchars($id_anggota); ?>">
                    <input type="hidden" name="bulan_int"  value="<?= htmlspecialchars($bulan); ?>">
                    <input type="hidden" name="tahun"      value="<?= htmlspecialchars($tahun); ?>">
                    <input type="hidden" name="id_rekap_absensi" value="<?= htmlspecialchars($id_rekap_absensi); ?>">

                    <?php foreach($payheads as $ph): ?>
                        <input type="hidden" name="payheads_ids[]"    value="<?= htmlspecialchars($ph['id_payhead']); ?>">
                        <input type="hidden" name="payheads_jenis[]"  value="<?= htmlspecialchars($ph['jenis']); ?>">
                        <input type="hidden" name="payheads_amount[]" value="<?= htmlspecialchars($ph['amount']); ?>">
                    <?php endforeach; ?>

                    <input type="hidden" name="no_rekening"        id="fieldNoRek"           value="">
                    <input type="hidden" name="gaji_pokok"         id="fieldGajiPokok"       value="">
                    <input type="hidden" name="total_earnings"     id="fieldTotalEarnings"   value="">
                    <input type="hidden" name="total_deductions"   id="fieldTotalDeductions" value="">
                    <input type="hidden" name="inputDescription"   id="fieldDescription"     value="">
                    <input type="hidden" name="tgl_payroll"        id="fieldTglPayroll"      value="">
                    <input type="hidden" name="csrf_token"         value="<?= htmlspecialchars($_SESSION['csrf_token'] ?? ''); ?>">

                    <button type="submit" class="btn btn-success float-right">
                        <i class="fas fa-check"></i> Proses Payroll
                    </button>
                </form>

                <!-- Tombol Tolak Payroll -->
                <button type="button" class="btn btn-warning mr-2 float-right" style="margin-right:10px;" id="btnRejectPayroll">
                    <i class="fas fa-times"></i> Tolak Payroll
                </button>
            </div>
        </div>
    </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
<!-- /.wrapper -->

<!-- MODAL: Edit Payhead -->
<div class="modal fade" id="modalEditPayhead" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formEditPayhead">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Payhead</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="edit_idpayhead" name="edit_idpayhead">
                    <div class="form-group">
                        <label>Jenis</label>
                        <input type="text" id="edit_jenis" class="form-control" name="edit_jenis" readonly>
                    </div>
                    <div class="form-group">
                        <label>Nilai (Amount)</label>
                        <input type="text" id="edit_amount" class="form-control currency-input" name="edit_amount" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" name="csrf_token" value="<?= htmlspecialchars($_SESSION['csrf_token'] ?? ''); ?>">
                    <button type="submit" class="btn btn-primary">Simpan</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Batal</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- MODAL: Konfirmasi Delete -->
<div class="modal fade" id="modalDeletePayhead" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Hapus Payhead</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Anda yakin ingin menghapus payhead ini?</p>
                <input type="hidden" id="del_idpayhead" name="del_idpayhead">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Batal</button>
                <button type="button" class="btn btn-danger" id="btnConfirmDelete">Ya, Hapus</button>
            </div>
        </div>
    </div>
</div>

<!-- JS: jQuery, Bootstrap, AdminLTE, AutoNumeric -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/js/adminlte.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/autonumeric@4.6.0/dist/autoNumeric.min.js"></script>
<script>
function initAutoNumeric() {
    AutoNumeric.multiple('.currency-input', {
        digitGroupSeparator: '.',
        decimalCharacter: ',',
        decimalPlaces: 2,
        unformatOnSubmit: true
    });
}
$(document).ready(function() {
    initAutoNumeric();

    // Recalc Gaji Bersih jika input gaji pokok berubah
    const inputGajiPokok     = $('#inputGajiPokok');
    const inputTotalEarnings = $('#inputTotalEarnings');
    const inputTotalDeductions = $('#inputTotalDeductions');
    const inputNetSalary     = $('#inputNetSalary');

    function recalcNetSalary() {
        const gp = parseFloat(AutoNumeric.getAutoNumericElement(inputGajiPokok[0]).getNumber()) || 0;
        const te = parseFloat(AutoNumeric.getAutoNumericElement(inputTotalEarnings[0]).getNumber()) || 0;
        const td = parseFloat(AutoNumeric.getAutoNumericElement(inputTotalDeductions[0]).getNumber()) || 0;
        AutoNumeric.getAutoNumericElement(inputNetSalary[0]).set(gp + te - td);
    }
    inputGajiPokok.on('keyup', recalcNetSalary);

    // Set nilai hidden field saat submit "Proses Payroll"
    $('form[action=""]').on('submit', function(e){
        $('#fieldNoRek').val($('#inputNoRek').val());
        $('#fieldGajiPokok').val(AutoNumeric.getAutoNumericElement(inputGajiPokok[0]).getNumber());
        $('#fieldTotalEarnings').val(AutoNumeric.getAutoNumericElement(inputTotalEarnings[0]).getNumber());
        $('#fieldTotalDeductions').val(AutoNumeric.getAutoNumericElement(inputTotalDeductions[0]).getNumber());
        $('#fieldDescription').val($('#inputDescription').val());
        $('#fieldTglPayroll').val($('#inputTanggalPayroll').val());
    });

    // Edit Payhead
    $('.btnEditPayhead').on('click', function() {
        const payheadId = $(this).data('idpayhead');
        const amount    = $(this).data('amount');
        const jenis     = $(this).data('jenis');
        $('#edit_idpayhead').val(payheadId);
        $('#edit_amount').val(amount);
        $('#edit_jenis').val(jenis.charAt(0).toUpperCase() + jenis.slice(1));
        $('#modalEditPayhead').modal('show');
    });
    $('#formEditPayhead').on('submit', function(e) {
        e.preventDefault();
        const idPayhead = $('#edit_idpayhead').val();
        const newAmount = parseFloat($('#edit_amount').val()) || 0;
        $.ajax({
            url: '?ajax=1',
            type: 'POST',
            dataType: 'json',
            data: {
                case: 'UpdatePayhead',
                id_anggota: '<?= htmlspecialchars($id_anggota); ?>',
                id_payhead: idPayhead,
                amount: newAmount,
                csrf_token: CSRF_TOKEN
            },
            success: function(resp) {
                if (resp.code === 0) {
                    alert('Berhasil update payhead!');
                    location.reload();
                } else {
                    alert('Gagal: ' + resp.result);
                }
            },
            error: function() {
                alert('Terjadi error saat update payhead');
            }
        });
    });

    // Tolak Payroll (status => revisi)
    $('#btnRejectPayroll').on('click', function(){
        if (!confirm("Anda yakin menolak payroll ini?")) return;
        $.ajax({
            url: '?ajax=1',
            type: 'POST',
            dataType: 'json',
            data: {
                case: 'RejectPayroll',
                id_anggota: '<?= $id_anggota; ?>',
                csrf_token: CSRF_TOKEN
            },
            success: function(resp) {
                if (resp.code === 0) {
                    alert("Payroll ditolak. Status payhead menjadi 'revisi'.");
                    // Arahkan kembali ke employees atau reload
                    window.location.href = '/payroll_absensi_v2/payroll/keuangan/employees.php';
                } else {
                    alert("Gagal: " + resp.result);
                }
            },
            error: function() {
                alert("Terjadi kesalahan saat menolak payroll.");
            }
        });
    });

    // Delete Payhead
    $('.btnDeletePayhead').on('click', function() {
        const payheadId = $(this).data('idpayhead');
        $('#del_idpayhead').val(payheadId);
        $('#modalDeletePayhead').modal('show');
    });
    $('#btnConfirmDelete').on('click', function() {
        const pid = $('#del_idpayhead').val();
        $.ajax({
            url: '?ajax=1',
            type: 'POST',
            dataType: 'json',
            data: {
                case: 'DeletePayhead',
                id_anggota: '<?= htmlspecialchars($id_anggota); ?>',
                id_payhead: pid,
                csrf_token: CSRF_TOKEN
            },
            success: function(resp) {
                if (resp.code === 0) {
                    alert('Payhead berhasil dihapus!');
                    location.reload();
                } else {
                    alert('Gagal: ' + resp.result);
                }
            },
            error: function() {
                alert('Terjadi error saat hapus payhead');
            }
        });
    });
});
</script>
</body>
</html>
<?php
// Akhir tampilan review payroll
}
?>

3. payroll-details.php :
<?php
// File: /payroll_absensi_v2/payroll/keuangan/payroll-details.php (fix)

// =========================
// 1. Pengaturan Keamanan
// =========================
session_set_cookie_params([
    'lifetime' => 0,
    'path'     => '/',
    'domain'   => $_SERVER['HTTP_HOST'],
    'secure'   => true,   // Hanya lewat HTTPS
    'httponly' => true,
    'samesite' => 'Strict'
]);
require_once __DIR__ . '/../../helpers.php';
start_session_safe();
init_error_handling();
generate_csrf_token();

$nonce = base64_encode(random_bytes(16));
$_SESSION['csp_nonce'] = $nonce;

if (empty($_SERVER['HTTPS']) || $_SERVER['HTTPS'] === 'off') {
    $redirect = 'https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
    header('HTTP/1.1 301 Moved Permanently');
    header('Location: ' . $redirect);
    exit();
}
header("Strict-Transport-Security: max-age=31536000; includeSubDomains; preload");
header("Content-Security-Policy: default-src 'self'; 
    script-src 'self' https://cdnjs.cloudflare.com https://code.jquery.com https://cdn.jsdelivr.net 'nonce-$nonce'; 
    style-src 'self' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net 'nonce-$nonce'; 
    img-src 'self'; 
    font-src 'self' https://cdnjs.cloudflare.com; 
    connect-src 'self'");

if (!isset($_SESSION['role']) || !in_array($_SESSION['role'], ['keuangan', 'superadmin'])) {
    header("Location: /payroll_absensi_v2/login.php");
    exit();
}

require_once __DIR__ . '/../../koneksi.php';


// =========================
// 2. Fungsi Pendukung
// =========================
function bulanIntToName($bulan) {
    $map = [
        1 => 'Januari', 2 => 'Februari', 3 => 'Maret',
        4 => 'April', 5 => 'Mei', 6 => 'Juni',
        7 => 'Juli', 8 => 'Agustus', 9 => 'September',
        10 => 'Oktober', 11 => 'November', 12 => 'Desember'
    ];
    return isset($map[$bulan]) ? $map[$bulan] : 'Tidak Diketahui';
}


// =========================
// 3. Ambil Parameter & Data Payroll
// =========================
$id_payroll = isset($_GET['id_payroll']) ? intval($_GET['id_payroll']) : 0;
if ($id_payroll <= 0) {
    echo "Parameter tidak valid.";
    exit();
}

try {
    // Ambil data payroll
    $stmtPayroll = $conn->prepare("SELECT * FROM payroll WHERE id = ? LIMIT 1");
    if ($stmtPayroll === false) {
        throw new Exception("Prepare payroll gagal: " . $conn->error);
    }
    $stmtPayroll->bind_param("i", $id_payroll);
    $stmtPayroll->execute();
    $resPayroll = $stmtPayroll->get_result();
    if ($resPayroll->num_rows == 0) {
        throw new Exception("Payroll tidak ditemukan.");
    }
    $payroll = $resPayroll->fetch_assoc();
    $stmtPayroll->close();

    // Ambil data karyawan
    $id_anggota = $payroll['id_anggota'];
    $stmtKar = $conn->prepare("SELECT * FROM anggota_sekolah WHERE id = ? LIMIT 1");
    if ($stmtKar === false) {
        throw new Exception("Prepare karyawan gagal: " . $conn->error);
    }
    $stmtKar->bind_param("i", $id_anggota);
    $stmtKar->execute();
    $resKar = $stmtKar->get_result();
    if ($resKar->num_rows == 0) {
        throw new Exception("Karyawan tidak ditemukan.");
    }
    $karyawan = $resKar->fetch_assoc();
    $stmtKar->close();

    // Ambil detail payroll
    $stmtDetail = $conn->prepare("
        SELECT pd.*, ph.nama_payhead, ph.jenis 
        FROM payroll_detail pd
        JOIN payheads ph ON pd.id_payhead = ph.id
        WHERE pd.id_payroll = ?
    ");
    if ($stmtDetail === false) {
        throw new Exception("Prepare detail gagal: " . $conn->error);
    }
    $stmtDetail->bind_param("i", $id_payroll);
    $stmtDetail->execute();
    $resDetail = $stmtDetail->get_result();
    $details = [];
    while ($row = $resDetail->fetch_assoc()) {
        $details[] = $row;
    }
    $stmtDetail->close();

    // Hitung total pendapatan & potongan
    $gaji_pokok = isset($payroll['gaji_pokok']) ? (float)$payroll['gaji_pokok'] : 0;
    $total_pendapatan = 0;
    $total_potongan = 0;
    foreach ($details as $detail) {
        if (strtolower($detail['jenis']) === 'earnings') {
            $total_pendapatan += (float)$detail['amount'];
        } elseif (strtolower($detail['jenis']) === 'deductions') {
            $total_potongan += (float)$detail['amount'];
        }
    }
    $gaji_bersih = $gaji_pokok + $total_pendapatan - $total_potongan;

    // --- Ambil data Level Indeks (jika ada) ---
    $salary_index_level = '';
    $salary_index_amount = 0;
    if (!empty($karyawan['salary_index_id'])) {
        $stmtIndex = $conn->prepare("SELECT level, base_salary FROM salary_indices WHERE id = ?");
        if ($stmtIndex) {
            $stmtIndex->bind_param("i", $karyawan['salary_index_id']);
            $stmtIndex->execute();
            $resultIndex = $stmtIndex->get_result();
            if ($resultIndex->num_rows > 0) {
                $salaryData = $resultIndex->fetch_assoc();
                $salary_index_level = $salaryData['level'];
                $salary_index_amount = (float)$salaryData['base_salary'];
            }
            $stmtIndex->close();
        }
    }
    // Gaji pokok yang ditampilkan adalah gaji pokok employee + level indeks
    $gaji_pokok_employee = isset($karyawan['gaji_pokok']) ? (float)$karyawan['gaji_pokok'] : 0;
    $gaji_pokok = $gaji_pokok_employee + $salary_index_amount;

    // Format tanggal payroll
    $tglPayrollRaw = $payroll['tgl_payroll'];
    $timestamp = strtotime($tglPayrollRaw);
    $tanggalCetak = date('d', $timestamp) . ' ' . bulanIntToName((int)date('n', $timestamp)) . ' ' . date('Y', $timestamp);

    // Format periode
    $periode = bulanIntToName((int)$payroll['bulan']) . ' ' . $payroll['tahun'];

    // Masa kerja karyawan
    $thn = isset($karyawan['masa_kerja_tahun']) ? (int)$karyawan['masa_kerja_tahun'] : 0;
    $bln = isset($karyawan['masa_kerja_bulan']) ? (int)$karyawan['masa_kerja_bulan'] : 0;
    $masaKerja = ($thn > 0 || $bln > 0) ? $thn . " Tahun" . ($bln > 0 ? " " . $bln . " Bulan" : "") : "";

    // Nomor rekening: gunakan nilai dari karyawan, atau jika kosong, dari data payroll
    $noRek = !empty($karyawan['no_rekening']) 
             ? $karyawan['no_rekening'] 
             : (isset($payroll['no_rekening']) && !empty($payroll['no_rekening']) ? $payroll['no_rekening'] : 'Belum ada');

    // Catatan payroll
    $catatan = trim($payroll['catatan']);

    // Audit Log
    $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;
    $log_details = "Mengakses Payroll ID $id_payroll untuk Karyawan ID $id_anggota pada periode $periode.";
    if (!add_audit_log($conn, $user_id, 'ViewPayrollDetails', $log_details)) {
        error_log("Gagal mencatat audit log untuk ViewPayrollDetails ID $id_payroll.");
    }

} catch (Exception $e) {
    echo "Terjadi kesalahan: " . htmlspecialchars($e->getMessage());
    exit();
}
?>
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <title>Slip Gaji #<?= htmlspecialchars($id_payroll); ?></title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="/payroll_absensi_v2/dist/css/bootstrap.min.css" nonce="<?php echo $nonce; ?>">
    <style nonce="<?php echo $nonce; ?>">
        body { background-color: #f8f9fa; }
        .invoice-box {
            max-width: 800px;
            margin: 30px auto;
            padding: 30px;
            background: #fff;
            border: 1px solid #dee2e6;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            font-size: 16px;
            line-height: 24px;
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            color: #343a40;
        }
        .invoice-box table {
            width: 100%;
            border-collapse: collapse;
        }
        .invoice-box table td {
            padding: 8px;
            vertical-align: top;
        }
        .invoice-box table tr.top table td {
            padding-bottom: 20px;
        }
        .invoice-box table tr.top table td.title {
            font-size: 36px;
            font-weight: bold;
            color: #007bff;
        }
        .invoice-box table tr.information table td {
            padding-bottom: 20px;
            font-size: 14px;
        }
        .invoice-box table tr.heading td {
            background: #e9ecef;
            border-bottom: 1px solid #dee2e6;
            font-weight: bold;
        }
        .invoice-box table tr.item td {
            border-bottom: 1px solid #dee2e6;
        }
        .invoice-box table tr.item.last td {
            border-bottom: none;
        }
        .invoice-box table tr.total td {
            font-weight: bold;
        }
        .detail-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        .detail-table th, .detail-table td {
            border: 1px solid #dee2e6;
            padding: 8px;
            text-align: center;
        }
        .detail-table th {
            background: #e9ecef;
        }
        .left-align { text-align: left; }
        .btn-print {
            text-align: center;
            margin-top: 30px;
        }
        .btn-print button {
            padding: 10px 20px;
            font-size: 16px;
            background: #28a745;
            border: none;
            color: #fff;
            cursor: pointer;
            border-radius: 4px;
        }
        .btn-print button:hover {
            background: #218838;
        }
        .catatan-box {
            margin-top: 20px;
            padding: 15px;
            border-left: 4px solid #007bff;
            background: #f1f1f1;
        }
        .catatan-box h4 {
            margin-top: 0;
            font-size: 18px;
            color: #007bff;
        }
        /* Tombol Kembali di pojok kiri atas */
        .btn-back {
            position: fixed;
            top: 10px;
            left: 10px;
            padding: 8px 12px;
            background: #007bff;
            color: #fff;
            text-decoration: none;
            border-radius: 4px;
            z-index: 1000;
        }
        .btn-back:hover {
            background: #0056b3;
        }
        /* Aturan untuk tampilan cetak (print) */
        @media print {
            /* Atur margin halaman cetak menjadi 20mm */
            @page {
                margin: 20mm;
            }
            body, .invoice-box {
                margin: 0;
                padding: 0;
                border: none;
                box-shadow: none;
                width: 100%;
            }
            /* Sembunyikan tombol cetak dan tombol kembali pada saat mencetak */
            .btn-print,
            .btn-back {
                display: none;
            }
        }
    </style>
</head>
<body>
    <!-- Tombol Kembali di pojok kiri atas -->
    <a href="payroll_history.php" class="btn-back">Kembali</a>
    
    <div class="invoice-box">
        <!-- Header Invoice -->
        <table>
            <tr class="top">
                <td colspan="2">
                    <table>
                        <tr>
                            <td class="title">
                                <img src="/payroll_absensi_v2/assets/img/Logo.png" alt="Logo Sekolah" style="max-width:100px;">
                            </td>
                            <td style="text-align:right;">
                                <strong>Slip Gaji #<?= htmlspecialchars($id_payroll); ?></strong><br>
                                Dibuat: <?= htmlspecialchars($tanggalCetak); ?><br>
                                Periode: <?= htmlspecialchars($periode); ?>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <!-- Informasi Penerima -->
            <tr class="information">
                <td colspan="2">
                    <table>
                        <tr>
                            <td>
                                <strong>Sekolah Nasional Nusaputera</strong><br>
                                Jl. Karanganyar No. 574<br>
                                Semarang, Jawa Tengah<br>
                                (024) 3542444
                            </td>
                            <td style="text-align:right;">
                                <strong>Penerima:</strong><br>
                                <?= htmlspecialchars($karyawan['nama']); ?><br>
                                Email: <?= htmlspecialchars($karyawan['email']); ?><br>
                                Role: <?= htmlspecialchars($karyawan['role']); ?><br>
                                <?php if (!empty($salary_index_level)): ?>
                                    Level Indeks: <?= htmlspecialchars($salary_index_level); ?><br>
                                <?php endif; ?>
                                <?php if (!empty($masaKerja)): ?>
                                    Masa Kerja: <?= htmlspecialchars($masaKerja); ?><br>
                                <?php endif; ?>
                                No. Rekening: <?= htmlspecialchars($noRek); ?>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    
        <!-- Rincian Pembayaran -->
        <table>
            <tr class="heading">
                <td colspan="2">Rincian Pembayaran</td>
            </tr>
            <tr class="details">
                <td>Gaji Pokok (Employee)</td>
                <td style="text-align:right;">Rp <?= number_format($gaji_pokok_employee, 2, ',', '.'); ?></td>
            </tr>
            <tr class="details">
                <td>Nominal Level Indeks</td>
                <td style="text-align:right;">Rp <?= number_format($salary_index_amount, 2, ',', '.'); ?></td>
            </tr>
            <tr class="details">
                <td><strong>Subtotal Gaji Pokok</strong></td>
                <td style="text-align:right;"><strong>Rp <?= number_format($gaji_pokok, 2, ',', '.'); ?></strong></td>
            </tr>
            <tr class="item">
                <td>Total Pendapatan (Payheads)</td>
                <td style="text-align:right;">Rp <?= number_format($total_pendapatan, 2, ',', '.'); ?></td>
            </tr>
            <tr class="item">
                <td>Total Potongan (Payheads)</td>
                <td style="text-align:right;">Rp <?= number_format($total_potongan, 2, ',', '.'); ?></td>
            </tr>
            <tr class="item last">
                <td>Gaji Bersih</td>
                <td style="text-align:right;">Rp <?= number_format($gaji_bersih, 2, ',', '.'); ?></td>
            </tr>
            <tr class="total">
                <td></td>
                <td style="text-align:right;">Total: Rp <?= number_format($gaji_bersih, 2, ',', '.'); ?></td>
            </tr>
        </table>
    
        <!-- Detail Payheads -->
        <h3>Detail Pendapatan &amp; Potongan</h3>
        <table class="detail-table">
            <tr class="heading">
                <th>No</th>
                <th class="left-align">Nama Payhead</th>
                <th>Jenis</th>
                <th>Jumlah</th>
            </tr>
            <?php
            $no = 1;
            foreach ($details as $detail) {
                $jenis_tampil = function_exists('translateJenis')
                    ? translateJenis($detail['jenis'])
                    : ucfirst($detail['jenis']);
                echo "<tr>";
                echo "<td>" . $no . "</td>";
                echo "<td class='left-align'>" . htmlspecialchars($detail['nama_payhead']) . "</td>";
                echo "<td>" . htmlspecialchars($jenis_tampil) . "</td>";
                echo "<td>Rp " . number_format($detail['amount'], 2, ',', '.') . "</td>";
                echo "</tr>";
                $no++;
            }
            ?>
        </table>
    
        <?php if (!empty($catatan)): ?>
        <div class="catatan-box">
            <h4>Catatan:</h4>
            <p><?= nl2br(htmlspecialchars($catatan)); ?></p>
        </div>
        <?php endif; ?>
    
        <!-- Tombol Cetak -->
        <div class="btn-print">
            <button onclick="window.print()">Cetak Slip Gaji</button>
        </div>
    </div>
</body>
</html>

Penjelasan perhalaman sedikit : 
1. Employees adalah halaman untuk menentukan pendapatan tambahan / tunjangan dan pemotongan perorangan dan memilih bulan yang akan di buatkan / diproses slip gajinya.

2. manage-salary adalah halaman untuk role/user mereview dulu untuk memastikan apakah semua sudah oke dan akan dijalankan payroll nya / diterbitkan slip gajinya.

3. payroll-details adalah halaman hasil pembuatan slip gaji nya.